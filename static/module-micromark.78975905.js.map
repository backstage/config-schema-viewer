{"version":3,"sources":["webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/regex-check.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/shallow.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/assign.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/prefix-size.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-alphanumeric.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/from-char-code.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/partial-blank-line.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/resolve-all.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-alpha.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/normalize-identifier.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/miniflat.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/chunked-push.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/unicode-punctuation.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/unicode-whitespace.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-control.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/label-end.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/markdown-line-ending.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/factory-space.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/has-own-property.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/size-chunks.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/subtokenize.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/initialize/text.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/combine-extensions.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/classify-character.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-digit.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/factory-destination.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/factory-label.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/factory-whitespace.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/factory-title.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/thematic-break.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/safe-from-int.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/parse.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/initialize/content.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/initialize/document.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/initialize/flow.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/content.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/splice.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/create-tokenizer.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/serialize-chunks.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/slice-chunks.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constructs.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/attention.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/move-point.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/autolink.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-atext.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/block-quote.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/character-escape.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-punctuation.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/character-reference.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/ascii-hex-digit.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/code-fenced.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/code-indented.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/code-text.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/definition.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/hard-break-escape.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/heading-atx.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/html-flow.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/html-block-names.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/constant/html-raw-names.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/html-text.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/label-start-image.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/label-start-link.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/line-ending.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/list.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/tokenize/setext-underline.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/preprocess.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/postprocess.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/markdown-space.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/util/chunked-splice.js","webpack:////home/runner/work/config-schema-viewer/config-schema-viewer/node_modules/micromark/dist/character/markdown-line-ending-or-space.js"],"names":["fromCharCode","module","exports","regex","code","test","assign","object","Object","sizeChunks","events","type","tail","length","sliceStream","asciiAlphanumeric","regexCheck","String","markdownLineEnding","factorySpace","partialBlankLine","tokenize","effects","ok","nok","partial","constructs","context","resolve","called","index","resolveAll","indexOf","push","asciiAlpha","value","replace","toLowerCase","toUpperCase","chunkedSplice","list","items","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","markdownLineEndingOrSpace","chunkedPush","normalizeIdentifier","shallow","factoryDestination","factoryLabel","factoryTitle","factoryWhitespace","labelEnd","name","labelStart","defined","self","this","_balanced","_inactive","balanced","parser","sliceSerialize","start","end","now","enter","consume","exit","afterLabelEnd","attempt","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","resolveTo","group","label","text","token","open","close","media","offset","slice","insideSpan","null","_used","splice","destinationAfter","between","call","afterLabel","markdownSpace","max","limit","Infinity","size","prefix","own","hasOwnProperty","chunks","subcontent","eventIndex","stream","previous","entered","adjust","startPosition","startPositions","tokenizer","_tokenizer","contentType","childEvents","jumps","gaps","next","defineSkip","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","write","undefined","line","add","pop","unshift","event","lineIndex","otherIndex","otherEvent","parameters","subevents","more","_container","_movePreviousLineEndings","defineProperty","initializeFactory","string","resolver","createResolver","field","notText","atBreak","data","resolveAllLineSuffixes","extraResolver","chunk","bufferIndex","tabs","charCodeAt","column","_index","_bufferIndex","miniflat","extension","all","hook","left","right","existing","before","extensions","asciiDigit","asciiControl","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","seen","marker","atFirstTitleBreak","atTitleBreak","title","titleEscape","thematicBreak","sequence","base","parseInt","content","document","flow","combineExtensions","createTokenizer","options","concat","create","initializer","from","contentStart","contentInitial","lineStart","inspectResult","childFlow","childToken","stack","continued","inspectConstruct","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","continueFlow","documentAfterPeek","disable","initial","flowInitial","afterConstruct","prefixSize","subtokenize","contentEnd","continuationConstruct","contentContinue","prefixed","serializeChunks","sliceChunks","initialize","point","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","Array","store","atTab","result","join","view","startIndex","startBufferIndex","endIndex","endBufferIndex","text$1","attention","autolink","blockQuote","characterEscape","characterReference","codeFenced","codeIndented","codeText","definition","hardBreakEscape","headingAtx","htmlFlow","htmlText","labelStartImage","labelStartLink","lineEnding","setextUnderline","42","43","45","48","49","50","51","52","53","54","55","56","57","62","91","32","35","60","61","95","96","126","38","92","33","93","classifyCharacter","movePoint","after","_open","_close","openingSequence","closingSequence","use","nextEvents","asciiAtext","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","asciiPunctuation","decodeEntity","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","numeric","closingFenceConstruct","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","indentedContentConstruct","afterPrefix","gap","tailExitIndex","headEnterIndex","identifier","labelAfter","titleConstruct","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","buffer","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","paragraph","heading","search","atCarriageReturn","encoding","match","endPosition","toString","lastIndex","exec","Math","ceil","remove","chunkStart","apply"],"mappings":"0FAEA,IAAIA,EAAe,EAAQ,KAU3BC,EAAOC,QARP,SAAoBC,GAClB,OAEA,SAAeC,GACb,OAAOD,EAAME,KAAKL,EAAaI,O,iCCNnC,IAAIE,EAAS,EAAQ,KAMrBL,EAAOC,QAJP,SAAiBK,GACf,OAAOD,EAAO,GAAIC,K,iCCHpB,IAAID,EAASE,OAAOF,OAEpBL,EAAOC,QAAUI,G,iCCFjB,IAAIG,EAAa,EAAQ,KAQzBR,EAAOC,QANP,SAAoBQ,EAAQC,GAC1B,IAAIC,EAAOF,EAAOA,EAAOG,OAAS,GAClC,OAAKD,GAAQA,EAAK,GAAGD,OAASA,EACvBF,EAAWG,EAAK,GAAGE,YAAYF,EAAK,KADA,I,iCCJ7C,IAEIG,EAFa,EAAQ,IAEDC,CAAW,cAEnCf,EAAOC,QAAUa,G,iCCJjB,IAAIf,EAAeiB,OAAOjB,aAE1BC,EAAOC,QAAUF,G,iCCFjB,IAAIkB,EAAqB,EAAQ,IAC7BC,EAAe,EAAQ,IAEvBC,EAAmB,CACrBC,SAIF,SAAkCC,EAASC,EAAIC,GAC7C,OAAOL,EAAaG,GAEpB,SAAyBlB,GACvB,OAAgB,OAATA,GAAiBc,EAAmBd,GAAQmB,EAAGnB,GAAQoB,EAAIpB,KAHtB,eAJ9CqB,SAAS,GAWXxB,EAAOC,QAAUkB,G,iCCCjBnB,EAAOC,QAjBP,SAAoBwB,EAAYhB,EAAQiB,GAKtC,IAJA,IAEIC,EAFAC,EAAS,GACTC,GAAS,IAGJA,EAAQJ,EAAWb,SAC1Be,EAAUF,EAAWI,GAAOC,aAEbF,EAAOG,QAAQJ,GAAW,IACvClB,EAASkB,EAAQlB,EAAQiB,GACzBE,EAAOI,KAAKL,IAIhB,OAAOlB,I,iCCdT,IAEIwB,EAFa,EAAQ,IAERlB,CAAW,YAE5Bf,EAAOC,QAAUgC,G,iCCWjBjC,EAAOC,QAfP,SAA6BiC,GAC3B,OACEA,EACGC,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBC,cACAC,gB,iCCHPrC,EAAOC,QARP,SAAkBiC,GAChB,OAAOA,QACH,GACA,WAAYA,EACZA,EACA,CAACA,K,iCCLP,IAAII,EAAgB,EAAQ,IAW5BtC,EAAOC,QATP,SAAqBsC,EAAMC,GACzB,OAAID,EAAK3B,QACP0B,EAAcC,EAAMA,EAAK3B,OAAQ,EAAG4B,GAC7BD,GAGFC,I,iCCRT,IAAIC,EAA0B,EAAQ,KAKlCC,EAJa,EAAQ,IAIA3B,CAAW0B,GAEpCzC,EAAOC,QAAUyC,G,iCCPjB,IAEIC,EAFa,EAAQ,IAED5B,CAAW,MAEnCf,EAAOC,QAAU0C,G,iCCKjB3C,EAAOC,QARP,SAAsBE,GACpB,OAGEA,EAAO,IAAe,MAATA,I,iCCLjB,IAAIyC,EAA4B,EAAQ,IACpCC,EAAc,EAAQ,KACtBP,EAAgB,EAAQ,IACxBQ,EAAsB,EAAQ,KAC9BhB,EAAa,EAAQ,KACrBiB,EAAU,EAAQ,KAClBC,EAAqB,EAAQ,KAC7BC,EAAe,EAAQ,KACvBC,EAAe,EAAQ,KACvBC,EAAoB,EAAQ,KAE5BC,EAAW,CACbC,KAAM,WACNjC,SAiIF,SAA0BC,EAASC,EAAIC,GACrC,IAEI+B,EACAC,EAHAC,EAAOC,KACP5B,EAAQ2B,EAAK/C,OAAOG,OAIxB,KAAOiB,KACL,IACkC,eAA/B2B,EAAK/C,OAAOoB,GAAO,GAAGnB,MACU,cAA/B8C,EAAK/C,OAAOoB,GAAO,GAAGnB,QACvB8C,EAAK/C,OAAOoB,GAAO,GAAG6B,UACvB,CACAJ,EAAaE,EAAK/C,OAAOoB,GAAO,GAChC,MAIJ,OAEA,SAAe1B,GACb,IAAKmD,EACH,OAAO/B,EAAIpB,GAGb,OAAImD,EAAWK,UAAkBC,EAASzD,IAC1CoD,EACEC,EAAKK,OAAON,QAAQxB,QAClBe,EACEU,EAAKM,eAAe,CAClBC,MAAOT,EAAWU,IAClBA,IAAKR,EAAKS,WAGX,EACP5C,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,eACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAK,YACNC,IAGT,SAASA,EAAclE,GAErB,OAAa,KAATA,EACKkB,EAAQiD,QACbC,EACAjD,EACAiC,EAAUjC,EAAKsC,EAHVvC,CAILlB,GAGS,KAATA,EACKkB,EAAQiD,QACbE,EACAlD,EACAiC,EACIlC,EAAQiD,QAAQG,EAA6BnD,EAAIsC,GACjDA,EALCvC,CAMLlB,GAGGoD,EAAUjC,EAAGnB,GAAQyD,EAASzD,GAGvC,SAASyD,EAASzD,GAEhB,OADAmD,EAAWI,WAAY,EAChBnC,EAAIpB,KAnMbuE,UAoCF,SAA2BjE,EAAQiB,GACjC,IAEIiD,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARApD,EAAQpB,EAAOG,OACfsE,EAAS,EASb,KAAOrD,KAGL,GAFAiD,EAAQrE,EAAOoB,GAAO,GAElBkD,EAAM,CAER,GACiB,SAAfD,EAAMpE,MACU,cAAfoE,EAAMpE,MAAwBoE,EAAMnB,UAErC,MAIuB,UAArBlD,EAAOoB,GAAO,IAAiC,cAAfiD,EAAMpE,OACxCoE,EAAMnB,WAAY,QAEf,GAAIqB,GACT,GACuB,UAArBvE,EAAOoB,GAAO,KACE,eAAfiD,EAAMpE,MAAwC,cAAfoE,EAAMpE,QACrCoE,EAAMpB,YAEPqB,EAAOlD,EAEY,cAAfiD,EAAMpE,MAAsB,CAC9BwE,EAAS,EACT,WAGoB,aAAfJ,EAAMpE,OACfsE,EAAQnD,GAgDZ,OA5CA8C,EAAQ,CACNjE,KAA+B,cAAzBD,EAAOsE,GAAM,GAAGrE,KAAuB,OAAS,QACtDqD,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGhB,OAC/BC,IAAKjB,EAAQtC,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,MAE5CY,EAAQ,CACNlE,KAAM,QACNqD,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGhB,OAC/BC,IAAKjB,EAAQtC,EAAOuE,GAAO,GAAGhB,MAEhCa,EAAO,CACLnE,KAAM,YACNqD,MAAOhB,EAAQtC,EAAOsE,EAAOG,EAAS,GAAG,GAAGlB,KAC5CA,IAAKjB,EAAQtC,EAAOuE,EAAQ,GAAG,GAAGjB,QAOpCkB,EAAQpC,EALRoC,EAAQ,CACN,CAAC,QAASN,EAAOjD,GACjB,CAAC,QAASkD,EAAOlD,IAGQjB,EAAO0E,MAAMJ,EAAO,EAAGA,EAAOG,EAAS,IAElED,EAAQpC,EAAYoC,EAAO,CAAC,CAAC,QAASJ,EAAMnD,KAE5CuD,EAAQpC,EACNoC,EACAnD,EACEJ,EAAQmC,OAAOpC,WAAW2D,WAAWC,KACrC5E,EAAO0E,MAAMJ,EAAOG,EAAS,EAAGF,EAAQ,GACxCtD,IAIJuD,EAAQpC,EAAYoC,EAAO,CACzB,CAAC,OAAQJ,EAAMnD,GACfjB,EAAOuE,EAAQ,GACfvE,EAAOuE,EAAQ,GACf,CAAC,OAAQJ,EAAOlD,KAGlBuD,EAAQpC,EAAYoC,EAAOxE,EAAO0E,MAAMH,EAAQ,IAEhDC,EAAQpC,EAAYoC,EAAO,CAAC,CAAC,OAAQN,EAAOjD,KAC5CY,EAAc7B,EAAQsE,EAAMtE,EAAOG,OAAQqE,GACpCxE,GA5HPqB,WAYF,SAA4BrB,GAC1B,IACIqE,EADAjD,GAAS,EAGb,OAASA,EAAQpB,EAAOG,SACtBkE,EAAQrE,EAAOoB,GAAO,IAGbyD,OACS,eAAfR,EAAMpE,MACU,cAAfoE,EAAMpE,MACS,aAAfoE,EAAMpE,OAGRD,EAAO8E,OAAO1D,EAAQ,EAAkB,eAAfiD,EAAMpE,KAAwB,EAAI,GAC3DoE,EAAMpE,KAAO,OACbmB,KAIJ,OAAOpB,IA9BL8D,EAAoB,CACtBnD,SAmMF,SAA0BC,EAASC,EAAIC,GACrC,OAEA,SAAepB,GAKb,OAJAkB,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,kBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,kBACNjB,EAAkB9B,EAAS0D,IAGpC,SAASA,EAAK5E,GACZ,OAAa,KAATA,EACK6D,EAAI7D,GAGN6C,EACL3B,EACAmE,EACAjE,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,EATKyB,CAUL7C,GAGJ,SAASqF,EAAiBrF,GACxB,OAAOyC,EAA0BzC,GAC7BgD,EAAkB9B,EAASoE,EAA3BtC,CAAoChD,GACpC6D,EAAI7D,GAGV,SAASsF,EAAQtF,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzB+C,EACL7B,EACA8B,EAAkB9B,EAAS2C,GAC3BzC,EACA,gBACA,sBACA,sBANK2B,CAOL/C,GAGG6D,EAAI7D,GAGb,SAAS6D,EAAI7D,GACX,OAAa,KAATA,GACFkB,EAAQ6C,MAAM,kBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,kBACb/C,EAAQ+C,KAAK,YACN9C,GAGFC,EAAIpB,MA5PXqE,EAAyB,CAC3BpD,SA+PF,SAA+BC,EAASC,EAAIC,GAC1C,IAAIiC,EAAOC,KACX,OAEA,SAAetD,GACb,OAAO8C,EAAayC,KAClBlC,EACAnC,EACAsE,EACApE,EACA,YACA,kBACA,kBAPK0B,CAQL9C,IAGJ,SAASwF,EAAWxF,GAClB,OAAOqD,EAAKK,OAAON,QAAQxB,QACzBe,EACEU,EAAKM,eAAeN,EAAK/C,OAAO+C,EAAK/C,OAAOG,OAAS,GAAG,IAAIuE,MAAM,GAAI,KAEtE,EACA5D,EAAIpB,GACJmB,EAAGnB,MApRPsE,EAA8B,CAChCrD,SAuRF,SAAoCC,EAASC,EAAIC,GAC/C,OAEA,SAAepB,GAKb,OAJAkB,EAAQ6C,MAAM,aACd7C,EAAQ6C,MAAM,mBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,mBACNW,GAGT,SAASA,EAAK5E,GACZ,OAAa,KAATA,GACFkB,EAAQ6C,MAAM,mBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,mBACb/C,EAAQ+C,KAAK,aACN9C,GAGFC,EAAIpB,MAIfH,EAAOC,QAAUmD,G,gCCnUjBpD,EAAOC,QAJP,SAA4BE,GAC1B,OAAOA,GAAQ,I,gCCDjB,IAAIyF,EAAgB,EAAQ,IA2B5B5F,EAAOC,QAzBP,SAAsBoB,EAASC,EAAIZ,EAAMmF,GACvC,IAAIC,EAAQD,EAAMA,EAAM,EAAIE,IACxBC,EAAO,EACX,OAEA,SAAe7F,GACb,GAAIyF,EAAczF,GAEhB,OADAkB,EAAQ6C,MAAMxD,GACPuF,EAAO9F,GAGhB,OAAOmB,EAAGnB,IAGZ,SAAS8F,EAAO9F,GACd,OAAIyF,EAAczF,IAAS6F,IAASF,GAClCzE,EAAQ8C,QAAQhE,GACT8F,IAGT5E,EAAQ+C,KAAK1D,GACNY,EAAGnB,O,iCCvBd,IAAI+F,EAAM,GAAGC,eAEbnG,EAAOC,QAAUiG,G,iCCWjBlG,EAAOC,QAXP,SAAoBmG,GAIlB,IAHA,IAAIvE,GAAS,EACTmE,EAAO,IAEFnE,EAAQuE,EAAOxF,QACtBoF,GAAiC,iBAAlBI,EAAOvE,GAAsBuE,EAAOvE,GAAOjB,OAAS,EAGrE,OAAOoF,I,iCCVT,IAAI3F,EAAS,EAAQ,KACjBiC,EAAgB,EAAQ,IACxBS,EAAU,EAAQ,KAkGtB,SAASsD,EAAW5F,EAAQ6F,GAkB1B,IAjBA,IASIC,EACAC,EACA3E,EACA4E,EACAzC,EACA0C,EAdA5B,EAAQrE,EAAO6F,GAAY,GAC3B5E,EAAUjB,EAAO6F,GAAY,GAC7BK,EAAgBL,EAAa,EAC7BM,EAAiB,GACjBC,EACF/B,EAAMgC,YAAcpF,EAAQmC,OAAOiB,EAAMiC,aAAajC,EAAMf,OAC1DiD,EAAcH,EAAUpG,OACxBwG,EAAQ,GACRC,EAAO,GASJpC,GAAO,CAEZ,KAAOrE,IAASkG,GAAe,KAAO7B,IAItC8B,EAAe5E,KAAK2E,GAEf7B,EAAMgC,aACTP,EAAS7E,EAAQb,YAAYiE,GAExBA,EAAMqC,MACTZ,EAAOvE,KAAK,MAGVwE,GACFK,EAAUO,WAAWtC,EAAMf,OAGzBe,EAAMuC,6BACRR,EAAUS,oCAAqC,GAGjDT,EAAUU,MAAMhB,GAEZzB,EAAMuC,6BACRR,EAAUS,wCAAqCE,IAInDhB,EAAW1B,EACXA,EAAQA,EAAMqC,KAOhB,IAHArC,EAAQ0B,EACR3E,EAAQmF,EAAYpG,OAEbiB,KAGyB,UAA1BmF,EAAYnF,GAAO,GACrB4E,GAAU,EAGVA,GACAO,EAAYnF,GAAO,GAAGnB,OAASsG,EAAYnF,EAAQ,GAAG,GAAGnB,MACzDsG,EAAYnF,GAAO,GAAGkC,MAAM0D,OAAST,EAAYnF,GAAO,GAAGmC,IAAIyD,OAE/DC,EAAIV,EAAY7B,MAAMtD,EAAQ,EAAGmC,IAEjCc,EAAMgC,WAAahC,EAAMqC,UAAOK,EAChC1C,EAAQA,EAAM0B,SACdxC,EAAMnC,EAAQ,GAWlB,IANAgF,EAAUpG,OAASqE,EAAMgC,WAAahC,EAAMqC,UAAOK,EAEnDE,EAAIV,EAAY7B,MAAM,EAAGnB,IACzBnC,GAAS,EACT6E,EAAS,IAEA7E,EAAQoF,EAAMrG,QACrBsG,EAAKR,EAASO,EAAMpF,GAAO,IAAM6E,EAASO,EAAMpF,GAAO,GACvD6E,GAAUO,EAAMpF,GAAO,GAAKoF,EAAMpF,GAAO,GAAK,EAGhD,OAAOqF,EAEP,SAASQ,EAAIvC,GACX,IAAIpB,EAAQ6C,EAAee,MAC3BV,EAAMW,QAAQ,CAAC7D,EAAOA,EAAQoB,EAAMvE,OAAS,IAC7C0B,EAAc7B,EAAQsD,EAAO,EAAGoB,IAIpCnF,EAAOC,QAhMP,SAAqBQ,GAWnB,IAVA,IAEIoH,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EARAlB,EAAQ,GACRpF,GAAS,IASJA,EAAQpB,EAAOG,QAAQ,CAC9B,KAAOiB,KAASoF,GACdpF,EAAQoF,EAAMpF,GAMhB,GAHAgG,EAAQpH,EAAOoB,GAIbA,GACkB,cAAlBgG,EAAM,GAAGnH,MACqB,mBAA9BD,EAAOoB,EAAQ,GAAG,GAAGnB,QAGrBqH,EAAa,IADbG,EAAYL,EAAM,GAAGf,WAAWrG,QAIPG,QACW,oBAAlCsH,EAAUH,GAAY,GAAGrH,OAEzBqH,GAAc,GAIdA,EAAaG,EAAUtH,QACW,YAAlCsH,EAAUH,GAAY,GAAGrH,MAEzB,OAASqH,EAAaG,EAAUtH,QACQ,YAAlCsH,EAAUH,GAAY,GAAGrH,MAIS,cAAlCwH,EAAUH,GAAY,GAAGrH,OAC3BwH,EAAUH,GAAY,GAAGV,4BAA6B,EACtDU,KAMR,GAAiB,UAAbF,EAAM,GACJA,EAAM,GAAGd,cACX1G,EAAO4G,EAAOZ,EAAW5F,EAAQoB,IACjCA,EAAQoF,EAAMpF,GACdsG,GAAO,QAGN,GAAIN,EAAM,GAAGO,YAAcP,EAAM,GAAGQ,yBAA0B,CAIjE,IAHAN,EAAalG,EACbiG,OAAYN,EAELO,MAIoB,gBAHzBC,EAAavH,EAAOsH,IAGP,GAAGrH,MACS,oBAAvBsH,EAAW,GAAGtH,OAEQ,UAAlBsH,EAAW,KACTF,IACFrH,EAAOqH,GAAW,GAAGpH,KAAO,mBAG9BsH,EAAW,GAAGtH,KAAO,aACrBoH,EAAYC,GAOdD,IAEFD,EAAM,GAAG7D,IAAMjB,EAAQtC,EAAOqH,GAAW,GAAG/D,QAE5CkE,EAAaxH,EAAO0E,MAAM2C,EAAWjG,IAC1B+F,QAAQC,GACnBvF,EAAc7B,EAAQqH,EAAWjG,EAAQiG,EAAY,EAAGG,KAK9D,OAAQE,I,iCCjGV5H,OAAO+H,eAAerI,EAAS,aAAc,CAACiC,OAAO,IAErD,IAAI7B,EAAS,EAAQ,KACjB0C,EAAU,EAAQ,KAElB8B,EAAO0D,EAAkB,QACzBC,EAASD,EAAkB,UAC3BE,EAAW,CACb3G,WAAY4G,KAGd,SAASH,EAAkBI,GACzB,MAAO,CACLvH,SAMF,SAAwBC,GACtB,IAAImC,EAAOC,KACPhC,EAAagC,KAAKI,OAAOpC,WAAWkH,GACpC9D,EAAOxD,EAAQiD,QAAQ7C,EAAYsC,EAAO6E,GAC9C,OAAO7E,EAEP,SAASA,EAAM5D,GACb,OAAO0I,EAAQ1I,GAAQ0E,EAAK1E,GAAQyI,EAAQzI,GAG9C,SAASyI,EAAQzI,GACf,GAAa,OAATA,EAOJ,OAFAkB,EAAQ6C,MAAM,QACd7C,EAAQ8C,QAAQhE,GACT2I,EANLzH,EAAQ8C,QAAQhE,GASpB,SAAS2I,EAAK3I,GACZ,OAAI0I,EAAQ1I,IACVkB,EAAQ+C,KAAK,QACNS,EAAK1E,KAGdkB,EAAQ8C,QAAQhE,GACT2I,GAGT,SAASD,EAAQ1I,GACf,IAAIoC,EAAOd,EAAWtB,GAClB0B,GAAS,EAEb,GAAa,OAAT1B,EACF,OAAO,EAGT,GAAIoC,EACF,OAASV,EAAQU,EAAK3B,QACpB,IACG2B,EAAKV,GAAO2E,UACbjE,EAAKV,GAAO2E,SAASd,KAAKlC,EAAMA,EAAKgD,UAErC,OAAO,IAlDf1E,WAAY4G,EACA,SAAVC,EAAmBI,OAAyBvB,IAyDlD,SAASkB,EAAeM,GACtB,OAEA,SAAwBvI,EAAQiB,GAC9B,IACIwC,EADArC,GAAS,EAIb,OAASA,GAASpB,EAAOG,aACT4G,IAAVtD,EACEzD,EAAOoB,IAAoC,SAA1BpB,EAAOoB,GAAO,GAAGnB,OACpCwD,EAAQrC,EACRA,KAEQpB,EAAOoB,IAAoC,SAA1BpB,EAAOoB,GAAO,GAAGnB,OAExCmB,IAAUqC,EAAQ,IACpBzD,EAAOyD,GAAO,GAAGF,IAAMvD,EAAOoB,EAAQ,GAAG,GAAGmC,IAC5CvD,EAAO8E,OAAOrB,EAAQ,EAAGrC,EAAQqC,EAAQ,GACzCrC,EAAQqC,EAAQ,GAGlBA,OAAQsD,GAIZ,OAAOwB,EAAgBA,EAAcvI,EAAQiB,GAAWjB,GAU5D,SAASsI,EAAuBtI,EAAQiB,GAWtC,IAVA,IACI0E,EACA0C,EACAG,EACApH,EACAqH,EACAlD,EACAmD,EACArE,EARAwB,GAAc,IAUTA,GAAc7F,EAAOG,QAC5B,IACG0F,IAAe7F,EAAOG,QACU,eAA/BH,EAAO6F,GAAY,GAAG5F,OACW,SAAnCD,EAAO6F,EAAa,GAAG,GAAG5F,KAC1B,CAQA,IAPAoI,EAAOrI,EAAO6F,EAAa,GAAG,GAE9BzE,GADAuE,EAAS1E,EAAQb,YAAYiI,IACdlI,OACfsI,GAAe,EACflD,EAAO,EACPmD,OAAO3B,EAEA3F,KAGL,GAAqB,iBAFrBoH,EAAQ7C,EAAOvE,IAEgB,CAG7B,IAFAqH,EAAcD,EAAMrI,OAEyB,KAAtCqI,EAAMG,WAAWF,EAAc,IACpClD,IACAkD,IAGF,GAAIA,EAAa,MACjBA,GAAe,OAEZ,IAAe,IAAXD,EACPE,GAAO,EACPnD,SACK,IAAe,IAAXiD,EACN,CAEHpH,IACA,MAIAmE,IACFlB,EAAQ,CACNpE,KACE4F,IAAe7F,EAAOG,QAAUuI,GAAQnD,EAAO,EAC3C,aACA,oBACNjC,MAAO,CACL0D,KAAMqB,EAAK9E,IAAIyD,KACf4B,OAAQP,EAAK9E,IAAIqF,OAASrD,EAC1Bd,OAAQ4D,EAAK9E,IAAIkB,OAASc,EAC1BsD,OAAQR,EAAK/E,MAAMuF,OAASzH,EAC5B0H,aAAc1H,EACVqH,EACAJ,EAAK/E,MAAMwF,aAAeL,GAEhClF,IAAKjB,EAAQ+F,EAAK9E,MAEpB8E,EAAK9E,IAAMjB,EAAQ+B,EAAMf,OAErB+E,EAAK/E,MAAMmB,SAAW4D,EAAK9E,IAAIkB,OACjC7E,EAAOyI,EAAMhE,IAEbrE,EAAO8E,OACLe,EACA,EACA,CAAC,QAASxB,EAAOpD,GACjB,CAAC,OAAQoD,EAAOpD,IAElB4E,GAAc,IAIlBA,IAIJ,OAAO7F,EAGTR,EAAQwI,SAAWA,EACnBxI,EAAQuI,OAASA,EACjBvI,EAAQ4E,KAAOA,G,iCCtMf,IAAIsB,EAAiB,EAAQ,KACzB7D,EAAgB,EAAQ,IACxBkH,EAAW,EAAQ,KAavB,SAASC,EAAUC,EAAKD,GACtB,IAAIE,EACAC,EACAC,EACA1J,EAEJ,IAAKwJ,KAAQF,EAIX,IAAKtJ,KAHLyJ,EAAOzD,EAAeT,KAAKgE,EAAKC,GAAQD,EAAIC,GAASD,EAAIC,GAAQ,GACjEE,EAAQJ,EAAUE,GAGhBC,EAAKzJ,GAAQsB,EACX+H,EAASK,EAAM1J,IACfgG,EAAeT,KAAKkE,EAAMzJ,GAAQyJ,EAAKzJ,GAAQ,IAMvD,SAASsB,EAAWc,EAAMuH,GAIxB,IAHA,IAAIjI,GAAS,EACTkI,EAAS,KAEJlI,EAAQU,EAAK3B,SACE,UAApB2B,EAAKV,GAAO6F,IAAkBoC,EAAWC,GAAQ/H,KAAKO,EAAKV,IAI/D,OADAS,EAAcwH,EAAU,EAAG,EAAGC,GACvBD,EAGT9J,EAAOC,QA1CP,SAA2B+J,GAIzB,IAHA,IAAIN,EAAM,GACN7H,GAAS,IAEJA,EAAQmI,EAAWpJ,QAC1B6I,EAAUC,EAAKM,EAAWnI,IAG5B,OAAO6H,I,iCCZT,IAAI9G,EAA4B,EAAQ,IACpCF,EAAqB,EAAQ,KAC7BC,EAAoB,EAAQ,KAoBhC3C,EAAOC,QAdP,SAA2BE,GACzB,OACW,OAATA,GACAyC,EAA0BzC,IAC1BwC,EAAkBxC,GAEX,EAGLuC,EAAmBvC,GACd,OADT,I,iCCjBF,IAEI8J,EAFa,EAAQ,IAERlJ,CAAW,MAE5Bf,EAAOC,QAAUgK,G,iCCJjB,IAAIC,EAAe,EAAQ,KACvBtH,EAA4B,EAAQ,IACpC3B,EAAqB,EAAQ,IA8HjCjB,EAAOC,QA3HP,SACEoB,EACAC,EACAC,EACAb,EACAyJ,EACAC,EACAC,EACAC,EACAzE,GAEA,IAAIC,EAAQD,GAAOE,IACfwE,EAAU,EACd,OAEA,SAAepK,GACb,GAAa,KAATA,EAMF,OALAkB,EAAQ6C,MAAMxD,GACdW,EAAQ6C,MAAMiG,GACd9I,EAAQ6C,MAAMkG,GACd/I,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKgG,GACNI,EAGT,GAAIN,EAAa/J,IAAkB,KAATA,EACxB,OAAOoB,EAAIpB,GASb,OANAkB,EAAQ6C,MAAMxD,GACdW,EAAQ6C,MAAMmG,GACdhJ,EAAQ6C,MAAMoG,GACdjJ,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAER0D,EAAetK,IAGxB,SAASqK,EAA0BrK,GACjC,OAAa,KAATA,GACFkB,EAAQ6C,MAAMkG,GACd/I,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKgG,GACb/I,EAAQ+C,KAAK+F,GACb9I,EAAQ+C,KAAK1D,GACNY,IAGTD,EAAQ6C,MAAMoG,GACdjJ,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAER2D,EAAoBvK,IAG7B,SAASuK,EAAoBvK,GAC3B,OAAa,KAATA,GACFkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAKkG,GACNE,EAA0BrK,IAGtB,OAATA,GAA0B,KAATA,GAAec,EAAmBd,GAC9CoB,EAAIpB,IAGbkB,EAAQ8C,QAAQhE,GACA,KAATA,EAAcwK,EAA4BD,GAGnD,SAASC,EAA0BxK,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkB,EAAQ8C,QAAQhE,GACTuK,GAGFA,EAAoBvK,GAG7B,SAASsK,EAAetK,GACtB,OAAa,KAATA,IACIoK,EAAUzE,EAAcvE,EAAIpB,IAClCkB,EAAQ8C,QAAQhE,GACTsK,GAGI,KAATtK,EACGoK,KAQLlJ,EAAQ8C,QAAQhE,GACTsK,IARLpJ,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAKkG,GACbjJ,EAAQ+C,KAAKiG,GACbhJ,EAAQ+C,KAAK1D,GACNY,EAAGnB,IAOD,OAATA,GAAiByC,EAA0BzC,GACzCoK,EAAgBhJ,EAAIpB,IACxBkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAKkG,GACbjJ,EAAQ+C,KAAKiG,GACbhJ,EAAQ+C,KAAK1D,GACNY,EAAGnB,IAGR+J,EAAa/J,GAAcoB,EAAIpB,IACnCkB,EAAQ8C,QAAQhE,GACA,KAATA,EAAcyK,EAAuBH,GAG9C,SAASG,EAAqBzK,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkB,EAAQ8C,QAAQhE,GACTsK,GAGFA,EAAetK,M,iCC5H1B,IAAIc,EAAqB,EAAQ,IAC7B2E,EAAgB,EAAQ,IAoF5B5F,EAAOC,QAjFP,SAAsBoB,EAASC,EAAIC,EAAKb,EAAMmK,EAAYP,GACxD,IAEIxB,EAFAtF,EAAOC,KACPuC,EAAO,EAEX,OAEA,SAAe7F,GAMb,OALAkB,EAAQ6C,MAAMxD,GACdW,EAAQ6C,MAAM2G,GACdxJ,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKyG,GACbxJ,EAAQ6C,MAAMoG,GACPzB,GAGT,SAASA,EAAQ1I,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgB2I,GAEP,KAAT3I,IAEE6F,GAED,2BAA4BxC,EAAKK,OAAOpC,YAC1CuE,EAAO,IAEAzE,EAAIpB,GAGA,KAATA,GACFkB,EAAQ+C,KAAKkG,GACbjJ,EAAQ6C,MAAM2G,GACdxJ,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKyG,GACbxJ,EAAQ+C,KAAK1D,GACNY,GAGLL,EAAmBd,IACrBkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNyE,IAGTxH,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAERnC,EAAMzE,IAGf,SAASyE,EAAMzE,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAc,EAAmBd,IACnB6F,IAAS,KAET3E,EAAQ+C,KAAK,eACNyE,EAAQ1I,KAGjBkB,EAAQ8C,QAAQhE,GAChB2I,EAAOA,IAASlD,EAAczF,GACd,KAATA,EAAc2K,EAAclG,GAGrC,SAASkG,EAAY3K,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCkB,EAAQ8C,QAAQhE,GAChB6F,IACOpB,GAGFA,EAAMzE,M,iCCjFjB,IAAIc,EAAqB,EAAQ,IAC7B2E,EAAgB,EAAQ,IACxB1E,EAAe,EAAQ,IA2B3BlB,EAAOC,QAzBP,SAA2BoB,EAASC,GAClC,IAAIyJ,EACJ,OAEA,SAAShH,EAAM5D,GACb,GAAIc,EAAmBd,GAKrB,OAJAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACb2G,GAAO,EACAhH,EAGT,GAAI6B,EAAczF,GAChB,OAAOe,EACLG,EACA0C,EACAgH,EAAO,aAAe,aAHjB7J,CAILf,GAGJ,OAAOmB,EAAGnB,M,iCCzBd,IAAIc,EAAqB,EAAQ,IAC7BC,EAAe,EAAQ,IAuE3BlB,EAAOC,QArEP,SAAsBoB,EAASC,EAAIC,EAAKb,EAAMmK,EAAYP,GACxD,IAAIU,EACJ,OAEA,SAAe7K,GAMb,OALAkB,EAAQ6C,MAAMxD,GACdW,EAAQ6C,MAAM2G,GACdxJ,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKyG,GACbG,EAAkB,KAAT7K,EAAc,GAAKA,EACrB8K,GAGT,SAASA,EAAkB9K,GACzB,OAAIA,IAAS6K,GACX3J,EAAQ6C,MAAM2G,GACdxJ,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAKyG,GACbxJ,EAAQ+C,KAAK1D,GACNY,IAGTD,EAAQ6C,MAAMoG,GACPY,EAAa/K,IAGtB,SAAS+K,EAAa/K,GACpB,OAAIA,IAAS6K,GACX3J,EAAQ+C,KAAKkG,GACNW,EAAkBD,IAGd,OAAT7K,EACKoB,EAAIpB,GAGTc,EAAmBd,IACrBkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EAAaG,EAAS6J,EAAc,gBAG7C7J,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAERoE,EAAMhL,IAGf,SAASgL,EAAMhL,GACb,OAAIA,IAAS6K,GAAmB,OAAT7K,GAAiBc,EAAmBd,IACzDkB,EAAQ+C,KAAK,eACN8G,EAAa/K,KAGtBkB,EAAQ8C,QAAQhE,GACA,KAATA,EAAciL,EAAcD,GAGrC,SAASC,EAAYjL,GACnB,OAAIA,IAAS6K,GAAmB,KAAT7K,GACrBkB,EAAQ8C,QAAQhE,GACTgL,GAGFA,EAAMhL,M,iCCpEjB,IAAIc,EAAqB,EAAQ,IAC7B2E,EAAgB,EAAQ,IACxB1E,EAAe,EAAQ,IAEvBmK,EAAgB,CAClBhI,KAAM,gBACNjC,SAGF,SAA+BC,EAASC,EAAIC,GAC1C,IACIyJ,EADAhF,EAAO,EAEX,OAEA,SAAe7F,GAGb,OAFAkB,EAAQ6C,MAAM,iBACd8G,EAAS7K,EACF0I,EAAQ1I,IAGjB,SAAS0I,EAAQ1I,GACf,OAAIA,IAAS6K,GACX3J,EAAQ6C,MAAM,yBACPoH,EAASnL,IAGdyF,EAAczF,GACTe,EAAaG,EAASwH,EAAS,aAA/B3H,CAA6Cf,GAGlD6F,EAAO,GAAe,OAAT7F,IAAkBc,EAAmBd,GAC7CoB,EAAIpB,IAGbkB,EAAQ+C,KAAK,iBACN9C,EAAGnB,IAGZ,SAASmL,EAASnL,GAChB,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GAChB6F,IACOsF,IAGTjK,EAAQ+C,KAAK,yBACNyE,EAAQ1I,OAInBH,EAAOC,QAAUoL,G,iCClDjB,IAAItL,EAAe,EAAQ,KAuB3BC,EAAOC,QArBP,SAAqBiC,EAAOqJ,GAC1B,IAAIpL,EAAOqL,SAAStJ,EAAOqJ,GAE3B,OAEEpL,EAAO,GACE,KAATA,GACCA,EAAO,IAAMA,EAAO,IACpBA,EAAO,KAAOA,EAAO,KACrBA,EAAO,OAASA,EAAO,OACvBA,EAAO,OAASA,EAAO,OACL,QAAX,MAAPA,IACkB,QAAX,MAAPA,IACDA,EAAO,QAEA,IAGFJ,EAAaI,K,iCCpBtB,IAAIsL,EAAU,EAAQ,KAClBC,EAAW,EAAQ,KACnBC,EAAO,EAAQ,KACf9G,EAAO,EAAQ,KACf+G,EAAoB,EAAQ,KAC5BC,EAAkB,EAAQ,KAC1BrC,EAAW,EAAQ,KACnB/H,EAAa,EAAQ,KA0BzBzB,EAAOC,QAxBP,SAAe6L,GACb,IACIjI,EAAS,CACXN,QAAS,GACT9B,WAAYmK,EACV,CAACnK,GAAYsK,OAAOvC,GAJTsC,GAAW,IAIgB9B,cAExCyB,QAASO,EAAOP,GAChBC,SAAUM,EAAON,GACjBC,KAAMK,EAAOL,GACbnD,OAAQwD,EAAOnH,EAAK2D,QACpB3D,KAAMmH,EAAOnH,EAAKA,OAEpB,OAAOhB,EAEP,SAASmI,EAAOC,GACd,OAEA,SAAiBC,GACf,OAAOL,EAAgBhI,EAAQoI,EAAaC,O,iCC5BlD3L,OAAO+H,eAAerI,EAAS,aAAc,CAACiC,OAAO,IAErD,IAAIjB,EAAqB,EAAQ,IAC7BC,EAAe,EAAQ,IAEvBE,EAEJ,SAA2BC,GACzB,IAKImF,EALA2F,EAAe9K,EAAQiD,QACzBb,KAAKI,OAAOpC,WAAW2K,gBAOzB,SAAoCjM,GAClC,GAAa,OAATA,EAEF,YADAkB,EAAQ8C,QAAQhE,GAOlB,OAHAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EAAaG,EAAS8K,EAAc,iBAG7C,SAA0BhM,GAExB,OADAkB,EAAQ6C,MAAM,aACPmI,EAAUlM,MAhBnB,OAAOgM,EAmBP,SAASE,EAAUlM,GACjB,IAAI2E,EAAQzD,EAAQ6C,MAAM,YAAa,CACrC6C,YAAa,OACbP,SAAUA,IAQZ,OALIA,IACFA,EAASW,KAAOrC,GAGlB0B,EAAW1B,EACJgE,EAAK3I,GAGd,SAAS2I,EAAK3I,GACZ,OAAa,OAATA,GACFkB,EAAQ+C,KAAK,aACb/C,EAAQ+C,KAAK,kBACb/C,EAAQ8C,QAAQhE,IAIdc,EAAmBd,IACrBkB,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,aACNiI,IAGThL,EAAQ8C,QAAQhE,GACT2I,KAIX7I,EAAQmB,SAAWA,G,iCClEnBb,OAAO+H,eAAerI,EAAS,aAAc,CAACiC,OAAO,IAErD,IAAIjB,EAAqB,EAAQ,IAC7BC,EAAe,EAAQ,IACvBC,EAAmB,EAAQ,KAE3BC,EAQJ,SAA4BC,GAC1B,IAOIiL,EACAC,EACAC,EATAhJ,EAAOC,KACPgJ,EAAQ,GACRC,EAAY,EACZC,EAAmB,CACrBvL,SAoHF,SAAyBC,EAASC,GAChC,IAAIsL,EAAe,EAEnB,OADAN,EAAgB,GACTO,EAEP,SAASA,EAAa1M,GACpB,OAAIyM,EAAeH,EAAM7L,QACvB4C,EAAKsJ,eAAiBL,EAAMG,GAAc,GACnCvL,EAAQiD,QACbmI,EAAMG,GAAc,GAAGG,aACvBC,EACAC,EAHK5L,CAILlB,IAIAoM,EAAUW,kBAAoBX,EAAUW,iBAAiBC,UAC3Db,EAAcc,cAAe,EACtBC,EAAYlN,KAGrBqD,EAAK8J,UACHf,EAAUW,kBAAoBX,EAAUW,iBAAiBK,cAC3D/J,EAAKsJ,eAAiB,GACfzL,EAAQiD,QACbkJ,EACAC,EACAJ,EAHKhM,CAILlB,IAGJ,SAAS6M,EAAgB7M,GAEvB,OADAyM,IACOpJ,EAAKsJ,eAAeY,WACvBD,EAAetN,GACf0M,EAAa1M,GAGnB,SAAS8M,EAAY9M,GACnB,OAAIoM,EAAUW,kBAAoBX,EAAUW,iBAAiBS,MAE3DnK,EAAKsJ,eAAiB,GACfzL,EAAQiD,QACbkJ,EACAC,EACApM,EAAQiD,QACNsJ,EACAH,EACApM,EAAQwM,MAAM1M,EAAkBsM,EAAgBK,IAN7CzM,CAQLlB,IAGGsN,EAAetN,GAGxB,SAAS2N,EAAY3N,GAKnB,OAHAyM,EAAeH,EAAM7L,OACrB0L,EAAcqB,MAAO,EACrBrB,EAAcc,cAAe,EACtBC,EAAYlN,GAGrB,SAASsN,EAAetN,GAEtB,OADAmM,EAAcyB,SAAU,EACjBV,EAAYlN,GAGrB,SAASkN,EAAYlN,GAGnB,OAFAmM,EAAcI,UAAYE,EAC1BpJ,EAAK8J,UAAY9J,EAAKsJ,oBAAiBtF,EAChClG,EAAGnB,KA3LZqB,SAAS,GAKX,OAAOuC,EAEP,SAASA,EAAM5D,GACb,OAAIuM,EAAYD,EAAM7L,QACpB4C,EAAKsJ,eAAiBL,EAAMC,GAAW,GAChCrL,EAAQiD,QACbmI,EAAMC,GAAW,GAAGK,aACpBiB,EACAC,EAHK5M,CAILlB,IAGG8N,EAAkB9N,GAG3B,SAAS6N,EAAiB7N,GAExB,OADAuM,IACO3I,EAAM5D,GAGf,SAAS8N,EAAkB9N,GAGzB,OAAImM,GAAiBA,EAAcc,aAC1Bc,EAAU/N,IAGnBqD,EAAK8J,UACHf,GACAA,EAAUW,kBACVX,EAAUW,iBAAiBK,cAC7B/J,EAAKsJ,eAAiB,GACfzL,EAAQiD,QACbkJ,EACAW,EACAD,EAHK7M,CAILlB,IAGJ,SAASgO,EAAkBhO,GAGzB,OAFAsM,EAAMzK,KAAK,CAACwB,EAAK0J,iBAAkB1J,EAAKsJ,iBACxCtJ,EAAKsJ,oBAAiBtF,EACfyG,EAAkB9N,GAG3B,SAAS+N,EAAU/N,GACjB,OAAa,OAATA,GACFiO,EAAe,GAAG,QAClB/M,EAAQ8C,QAAQhE,KAIlBoM,EAAYA,GAAa/I,EAAKK,OAAO8H,KAAKnI,EAAKS,OAC/C5C,EAAQ6C,MAAM,YAAa,CACzB6C,YAAa,OACbP,SAAUgG,EACV1F,WAAYyF,IAEPa,EAAajN,IAGtB,SAASiN,EAAajN,GACpB,OAAa,OAATA,GACFkO,EAAahN,EAAQ+C,KAAK,cACnB8J,EAAU/N,IAGfc,EAAmBd,IACrBkB,EAAQ8C,QAAQhE,GAChBkO,EAAahN,EAAQ+C,KAAK,cACnB/C,EAAQwM,MAAMlB,EAAkB2B,KAGzCjN,EAAQ8C,QAAQhE,GACTiN,GAGT,SAASkB,EAAkBnO,GAMzB,OALAiO,EACE9B,EAAcI,UACdJ,GAAiBA,EAAcyB,SAEjCrB,EAAY,EACL3I,EAAM5D,GAGf,SAASkO,EAAavJ,GAChB0H,IAAYA,EAAWrF,KAAOrC,GAClC0H,EAAa1H,EACbyH,EAAUoB,KAAOrB,GAAiBA,EAAcqB,KAChDpB,EAAUnF,WAAWtC,EAAMf,OAC3BwI,EAAUhF,MAAM/D,EAAK3C,YAAYiE,IAGnC,SAASsJ,EAAepI,EAAMhC,GAC5B,IAAInC,EAAQ4K,EAAM7L,OAOlB,IALI2L,GAAavI,IACfuI,EAAUhF,MAAM,CAAC,OACjBiF,EAAaD,OAAY/E,GAGpB3F,KAAUmE,GACfxC,EAAKsJ,eAAiBL,EAAM5K,GAAO,GACnC4K,EAAM5K,GAAO,GAAGuC,KAAKsB,KAAKlC,EAAMnC,GAGlCoL,EAAM7L,OAASoF,IA7HfwH,EAAqB,CACvBpM,SA4MF,SAA2BC,EAASC,EAAIC,GACtC,OAAOL,EACLG,EACAA,EAAQiD,QAAQb,KAAKI,OAAOpC,WAAWiK,SAAUpK,EAAIC,GACrD,aACAkC,KAAKI,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,KAjNJoG,EAAoB,CACtBxM,SAoNF,SAA0BC,EAASC,EAAIC,GACrC,OAAOL,EACLG,EACAA,EAAQsM,KAAKlK,KAAKI,OAAOpC,WAAWkK,KAAMrK,EAAIC,GAC9C,aACAkC,KAAKI,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,KAIRvH,EAAQmB,SAAWA,G,iCC1OnBb,OAAO+H,eAAerI,EAAS,aAAc,CAACiC,OAAO,IAErD,IAAIuJ,EAAU,EAAQ,KAClBvK,EAAe,EAAQ,IACvBC,EAAmB,EAAQ,KAE3BC,EAEJ,SAAwBC,GACtB,IAAImC,EAAOC,KACP+K,EAAUnN,EAAQiD,QAEpBnD,GAkBF,SAAuBhB,GACrB,GAAa,OAATA,EAEF,YADAkB,EAAQ8C,QAAQhE,GAQlB,OAJAkB,EAAQ6C,MAAM,mBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,mBACbZ,EAAK0J,sBAAmB1F,EACjBgH,IA1BPnN,EAAQiD,QACNb,KAAKI,OAAOpC,WAAWgN,YACvBC,EACAxN,EACEG,EACAA,EAAQiD,QACNb,KAAKI,OAAOpC,WAAWkK,KACvB+C,EACArN,EAAQiD,QAAQmH,EAASiD,IAE3B,gBAIN,OAAOF,EAeP,SAASE,EAAevO,GACtB,GAAa,OAATA,EASJ,OAJAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACbZ,EAAK0J,sBAAmB1F,EACjBgH,EARLnN,EAAQ8C,QAAQhE,KAYtBF,EAAQmB,SAAWA,G,iCCzDnB,IAAIH,EAAqB,EAAQ,IAC7B0N,EAAa,EAAQ,KACrBC,EAAc,EAAQ,KACtB1N,EAAe,EAAQ,IAGvBuK,EAAU,CACZrK,SAgBF,SAAyBC,EAASC,GAChC,IAAIkF,EACJ,OAEA,SAAerG,GAKb,OAJAkB,EAAQ6C,MAAM,WACdsC,EAAWnF,EAAQ6C,MAAM,eAAgB,CACvC6C,YAAa,YAER+B,EAAK3I,IAGd,SAAS2I,EAAK3I,GACZ,OAAa,OAATA,EACK0O,EAAW1O,GAGhBc,EAAmBd,GACdkB,EAAQwM,MACbiB,EACAC,EACAF,EAHKxN,CAILlB,IAGJkB,EAAQ8C,QAAQhE,GACT2I,GAGT,SAAS+F,EAAW1O,GAGlB,OAFAkB,EAAQ+C,KAAK,gBACb/C,EAAQ+C,KAAK,WACN9C,EAAGnB,GAGZ,SAAS4O,EAAgB5O,GAOvB,OANAkB,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,gBACboC,EAAWA,EAASW,KAAO9F,EAAQ6C,MAAM,eAAgB,CACvD6C,YAAa,UACbP,SAAUA,IAELsC,IAzDTnH,QAUF,SAAwBlB,GAEtB,OADAmO,EAAYnO,GACLA,GAXP8M,eAAe,EACfI,MAAM,GAEJmB,EAAwB,CAC1B1N,SAwDF,SAA8BC,EAASC,EAAIC,GACzC,IAAIiC,EAAOC,KACX,OAEA,SAAwBtD,GAItB,OAHAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EAAaG,EAAS2N,EAAU,eAGzC,SAASA,EAAS7O,GAChB,OAAa,OAATA,GAAiBc,EAAmBd,GAC/BoB,EAAIpB,GAIXqD,EAAKK,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,GAC/D4M,EAAWnL,EAAK/C,OAAQ,cAAgB,EAEjCY,EAAQiM,UAAU9J,EAAKK,OAAOpC,WAAWkK,KAAMpK,EAAKD,EAApDD,CAAwDlB,GAG1DmB,EAAGnB,KA9EZqB,SAAS,GAkFXxB,EAAOC,QAAUwL,G,iCChGjB,IAAIlG,EAAS,GAAGA,OAEhBvF,EAAOC,QAAUsF,G,iCCFjB,IAAIlF,EAAS,EAAQ,KACjBY,EAAqB,EAAQ,IAC7B4B,EAAc,EAAQ,KACtBP,EAAgB,EAAQ,IACxBkH,EAAW,EAAQ,KACnB1H,EAAa,EAAQ,KACrBmN,EAAkB,EAAQ,KAC1BlM,EAAU,EAAQ,KAClBmM,EAAc,EAAQ,KAiT1BlP,EAAOC,QAxSP,SAAyB4D,EAAQsL,EAAYjD,GAC3C,IAAIkD,EAAQlD,EACRnJ,EAAQmJ,GACR,CACEzE,KAAM,EACN4B,OAAQ,EACRnE,OAAQ,GAEVmK,EAAc,GACdC,EAAuB,GACvBlJ,EAAS,GACTqG,EAAQ,GAERpL,EAAU,CACZ8C,QAyGF,SAAiBhE,GACXc,EAAmBd,IACrBiP,EAAM3H,OACN2H,EAAM/F,OAAS,EACf+F,EAAMlK,SAAoB,IAAV/E,EAAc,EAAI,EAClCoP,MACmB,IAAVpP,IACTiP,EAAM/F,SACN+F,EAAMlK,UAGJkK,EAAM7F,aAAe,EACvB6F,EAAM9F,UAEN8F,EAAM7F,eAEF6F,EAAM7F,eAAiBnD,EAAOgJ,EAAM9F,QAAQ1I,SAC9CwO,EAAM7F,cAAgB,EACtB6F,EAAM9F,WAIV5H,EAAQ8E,SAAWrG,GA9HnB+D,MAiIF,SAAexD,EAAM8O,GACnB,IAAI1K,EAAQ0K,GAAU,GAKtB,OAJA1K,EAAMpE,KAAOA,EACboE,EAAMf,MAAQE,IACdvC,EAAQjB,OAAOuB,KAAK,CAAC,QAAS8C,EAAOpD,IACrC+K,EAAMzK,KAAK8C,GACJA,GAtIPV,KAyIF,SAAc1D,GACZ,IAAIoE,EAAQ2H,EAAM9E,MAGlB,OAFA7C,EAAMd,IAAMC,IACZvC,EAAQjB,OAAOuB,KAAK,CAAC,OAAQ8C,EAAOpD,IAC7BoD,GA5IPR,QAASmL,GA+IX,SAA+BC,EAAWC,GACxCC,EAAUF,EAAWC,EAAKzD,SA/I1B2B,MAAO4B,EAAiBI,GACxBvC,UAAWmC,EAAiBI,EAAmB,CAC7CvC,WAAW,IAEbK,KAAM8B,EAAiBI,EAAmB,CACxClC,MAAM,KAINjM,EAAU,CACZ8E,SAAU,KACV/F,OAAQ,GACRoD,OAAQA,EACRhD,YAAaA,EACbiD,eAgCF,SAAwBgB,GACtB,OAAOmK,EAAgBpO,EAAYiE,KAhCnCb,IAAKA,EACLmD,WA0CF,SAAclF,GACZmN,EAAYnN,EAAMuF,MAAQvF,EAAMmH,OAChCkG,KA3CAhI,MAaF,SAAepC,GAIb,GAHAiB,EAASvD,EAAYuD,EAAQjB,GAC7B2K,IAEkC,OAA9B1J,EAAOA,EAAOxF,OAAS,GACzB,MAAO,GAMT,OAHAgP,EAAUT,EAAY,GAEtBzN,EAAQjB,OAASqB,EAAWwN,EAAsB5N,EAAQjB,OAAQiB,GAC3DA,EAAQjB,SArBbsP,EAAQZ,EAAW/N,SAASsE,KAAKhE,EAASL,GAQ9C,OANI8N,EAAWrN,YACbwN,EAAqBtN,KAAKmN,GAG5BC,EAAM9F,OAAS,EACf8F,EAAM7F,cAAgB,EACf7H,EAsBP,SAASb,EAAYiE,GACnB,OAAOoK,EAAY9I,EAAQtB,GAG7B,SAASb,IACP,OAAOlB,EAAQqM,GAgBjB,SAASU,IAIP,IAHA,IAAIE,EACA/G,EAEGmG,EAAM9F,OAASlD,EAAOxF,QAG3B,GAAqB,iBAFrBqI,EAAQ7C,EAAOgJ,EAAM9F,SASnB,IANA0G,EAAaZ,EAAM9F,OAEf8F,EAAM7F,aAAe,IACvB6F,EAAM7F,aAAe,GAIrB6F,EAAM9F,SAAW0G,GACjBZ,EAAM7F,aAAeN,EAAMrI,QAE3BqP,EAAGhH,EAAMG,WAAWgG,EAAM7F,oBAG5B0G,EAAGhH,GAKT,SAASgH,EAAG9P,GACV4P,EAAQA,EAAM5P,GAgDhB,SAAS0P,EAAkBH,EAAWC,GACpCA,EAAKO,UAGP,SAAST,EAAiBU,EAAUX,GAClC,OAGA,SAAc/N,EAAY2O,EAAaC,GACrC,IAAIC,EACAC,EACArD,EACAyC,EACJ,OAAOlO,EAAWL,UAAY,WAAYK,EACtC+O,EAAuBhH,EAAS/H,IAGpC,SAA+BtB,GAC7B,GAAIA,KAAQsB,GAAc,QAAQA,EAChC,OAAO+O,EACL/O,EAAW4D,KAEPmE,EAAS/H,EAAWtB,IAAO4L,OAAOvC,EAAS/H,EAAW4D,OACtD5D,EAAWtB,GAJVqQ,CAKLrQ,GAGJ,OAAOkQ,EAAWlQ,IAGpB,SAASqQ,EAAuBjO,GAG9B,OAFA+N,EAAmB/N,EAEZkO,EAAgBlO,EADvBgO,EAAiB,IAInB,SAASE,EAAgBf,GACvB,OAEA,SAAevP,GAKbwP,EA2DR,WACE,IAAIe,EAAazM,IACb0M,EAAgBjP,EAAQ8E,SACxBoK,EAAwBlP,EAAQwL,iBAChC2D,EAAmBnP,EAAQjB,OAAOG,OAClCkQ,EAAaC,MAAM7E,KAAKO,GAC5B,MAAO,CACLyD,QAIF,WACEd,EAAQsB,EACRhP,EAAQ8E,SAAWmK,EACnBjP,EAAQwL,iBAAmB0D,EAC3BlP,EAAQjB,OAAOG,OAASiQ,EACxBpE,EAAQqE,EACRvB,KATArD,KAAM2E,GAnEKG,GACP9D,EAAmBwC,EAEdA,EAAUlO,UACbE,EAAQwL,iBAAmBwC,GAG7B,GACEA,EAAUrM,MACV3B,EAAQmC,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ2N,EAAUrM,OAAS,EAElE,OAAO9B,IAGT,OAAOmO,EAAUtO,SAASsE,KACxB8J,EAASnP,EAAO,GAAIqB,EAAS8N,GAAU9N,EACvCL,EACAC,EACAC,EAJKmO,CAKLvP,IAIN,SAASmB,EAAGnB,GAEV,OADAgQ,EAASjD,EAAkByC,GACpBS,EAGT,SAAS7O,EAAIpB,GAGX,OAFAwP,EAAKO,YAECK,EAAiBD,EAAiB1P,OAC/B6P,EAAgBH,EAAiBC,IAGnCF,IAKb,SAAST,EAAUF,EAAWxD,GACxBwD,EAAU5N,YAAcwN,EAAqBvN,QAAQ2N,GAAa,GACpEJ,EAAqBtN,KAAK0N,GAGxBA,EAAU/N,SACZW,EACEZ,EAAQjB,OACRyL,EACAxK,EAAQjB,OAAOG,OAASsL,EACxBwD,EAAU/N,QAAQD,EAAQjB,OAAO0E,MAAM+G,GAAOxK,IAI9CgO,EAAUhL,YACZhD,EAAQjB,OAASiP,EAAUhL,UAAUhD,EAAQjB,OAAQiB,IAyBzD,SAAS6N,IACHH,EAAM3H,QAAQ4H,GAAeD,EAAM/F,OAAS,IAC9C+F,EAAM/F,OAASgG,EAAYD,EAAM3H,MACjC2H,EAAMlK,QAAUmK,EAAYD,EAAM3H,MAAQ,M,iCCpThD,IAAI1H,EAAe,EAAQ,KAqC3BC,EAAOC,QAnCP,SAAyBmG,GAOvB,IANA,IAEI6C,EACA/G,EACA+O,EAJApP,GAAS,EACTqP,EAAS,KAKJrP,EAAQuE,EAAOxF,QAAQ,CAG9B,GAAqB,iBAFrBqI,EAAQ7C,EAAOvE,IAGbK,EAAQ+G,OACH,IAAe,IAAXA,EACT/G,EAAQ,UACH,IAAe,IAAX+G,EACT/G,EAAQ,UACH,IAAe,IAAX+G,EACT/G,EAAQ,YACH,IAAe,IAAX+G,EACT/G,EAAQ,UACH,IAAe,IAAX+G,EAAc,CACvB,GAAIgI,EAAO,SACX/O,EAAQ,SAGRA,EAAQnC,EAAakJ,GAGvBgI,GAAmB,IAAXhI,EACRiI,EAAOlP,KAAKE,GAGd,OAAOgP,EAAOC,KAAK,M,iCCVrBnR,EAAOC,QAxBP,SAAqBmG,EAAQtB,GAC3B,IAIIsM,EAJAC,EAAavM,EAAMf,MAAMuF,OACzBgI,EAAmBxM,EAAMf,MAAMwF,aAC/BgI,EAAWzM,EAAMd,IAAIsF,OACrBkI,EAAiB1M,EAAMd,IAAIuF,aAiB/B,OAdI8H,IAAeE,EACjBH,EAAO,CAAChL,EAAOiL,GAAYlM,MAAMmM,EAAkBE,KAEnDJ,EAAOhL,EAAOjB,MAAMkM,EAAYE,GAE5BD,GAAoB,IACtBF,EAAK,GAAKA,EAAK,GAAGjM,MAAMmM,IAGtBE,EAAiB,GACnBJ,EAAKpP,KAAKoE,EAAOmL,GAAUpM,MAAM,EAAGqM,KAIjCJ,I,iCCrBT7Q,OAAO+H,eAAerI,EAAS,aAAc,CAACiC,OAAO,IAErD,IAAIuP,EAAS,EAAQ,KACjBC,EAAY,EAAQ,KACpBC,EAAW,EAAQ,KACnBC,EAAa,EAAQ,KACrBC,EAAkB,EAAQ,KAC1BC,EAAqB,EAAQ,KAC7BC,EAAa,EAAQ,KACrBC,EAAe,EAAQ,KACvBC,EAAW,EAAQ,KACnBC,EAAa,EAAQ,KACrBC,EAAkB,EAAQ,KAC1BC,EAAa,EAAQ,KACrBC,EAAW,EAAQ,KACnBC,EAAW,EAAQ,KACnBlP,EAAW,EAAQ,KACnBmP,EAAkB,EAAQ,KAC1BC,EAAiB,EAAQ,KACzBC,EAAa,EAAQ,KACrBlQ,EAAO,EAAQ,KACfmQ,EAAkB,EAAQ,KAC1BrH,EAAgB,EAAQ,KAExBK,EAAW,CACbiH,GAAIpQ,EAEJqQ,GAAIrQ,EAEJsQ,GAAItQ,EAEJuQ,GAAIvQ,EAEJwQ,GAAIxQ,EAEJyQ,GAAIzQ,EAEJ0Q,GAAI1Q,EAEJ2Q,GAAI3Q,EAEJ4Q,GAAI5Q,EAEJ6Q,GAAI7Q,EAEJ8Q,GAAI9Q,EAEJ+Q,GAAI/Q,EAEJgR,GAAIhR,EAEJiR,GAAI5B,GAEFxF,EAAiB,CACnBqH,GAAIvB,GAEFzD,EAAc,CAChB,KAAMuD,EAEN,KAAMA,EAEN0B,GAAI1B,GAEFrG,EAAO,CACTgI,GAAIvB,EAEJO,GAAItH,EAEJwH,GAAI,CAACH,EAAiBrH,GAEtBuI,GAAIvB,EAEJwB,GAAInB,EAEJoB,GAAIzI,EAEJ0I,GAAIhC,EAEJiC,IAAKjC,GAEHvJ,EAAS,CACXyL,GAAInC,EAEJoC,GAAIrC,GAEFhN,EAAO,CACT,KAAM4N,EAEN,KAAMA,EAEN,KAAMA,EAEN0B,GAAI5B,EAEJ0B,GAAInC,EAEJa,GAAIjB,EAEJkC,GAAI,CAACjC,EAAUW,GAEfmB,GAAIjB,EAEJ0B,GAAI,CAAC/B,EAAiBN,GAEtBuC,GAAIhR,EAEJ0Q,GAAIpC,EAEJqC,GAAI9B,GAEF7M,EAAa,CACfC,KAAM,CAACqM,EAAWD,EAAOhJ,WAM3BxI,EAAQmM,eAAiBA,EACzBnM,EAAQsO,QALM,CACZlJ,KAAM,IAKRpF,EAAQyL,SAAWA,EACnBzL,EAAQ0L,KAAOA,EACf1L,EAAQwO,YAAcA,EACtBxO,EAAQmF,WAAaA,EACrBnF,EAAQuI,OAASA,EACjBvI,EAAQ4E,KAAOA,G,iCC5Hf,IAAIhC,EAAc,EAAQ,KACtBP,EAAgB,EAAQ,IACxB+R,EAAoB,EAAQ,KAC5BC,EAAY,EAAQ,KACpBxS,EAAa,EAAQ,KACrBiB,EAAU,EAAQ,KAElB2O,EAAY,CACdrO,KAAM,YACNjC,SA8IF,SAA2BC,EAASC,GAClC,IACI0J,EADAjB,EAASsK,EAAkB5Q,KAAK+C,UAEpC,OAEA,SAAerG,GAGb,OAFAkB,EAAQ6C,MAAM,qBACd8G,EAAS7K,EACFmL,EAASnL,IAGlB,SAASmL,EAASnL,GAChB,IAAI2E,EACAyP,EACAxP,EACAC,EAEJ,OAAI7E,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GACTmL,IAGTxG,EAAQzD,EAAQ+C,KAAK,qBAErBW,IADAwP,EAAQF,EAAkBlU,KACE,IAAVoU,GAAexK,EACjC/E,GAAS+E,GAAsB,IAAXA,GAAgBwK,EACpCzP,EAAM0P,MAAmB,KAAXxJ,EAAgBjG,EAAOA,IAASgF,IAAW/E,GACzDF,EAAM2P,OAAoB,KAAXzJ,EAAgBhG,EAAQA,IAAUuP,IAAUxP,GACpDzD,EAAGnB,MAzKZ2B,WAGF,SAA6BrB,EAAQiB,GACnC,IACIqD,EACAJ,EACAE,EACA6P,EACAC,EACAC,EACAC,EACA3P,EARArD,GAAS,EAab,OAASA,EAAQpB,EAAOG,QAEtB,GACuB,UAArBH,EAAOoB,GAAO,IACY,sBAA1BpB,EAAOoB,GAAO,GAAGnB,MACjBD,EAAOoB,GAAO,GAAG4S,OAIjB,IAFA1P,EAAOlD,EAEAkD,KAEL,GACsB,SAApBtE,EAAOsE,GAAM,IACY,sBAAzBtE,EAAOsE,GAAM,GAAGrE,MAChBD,EAAOsE,GAAM,GAAGyP,OAChB9S,EAAQoC,eAAerD,EAAOsE,GAAM,IAAIqE,WAAW,KACjD1H,EAAQoC,eAAerD,EAAOoB,GAAO,IAAIuH,WAAW,GACtD,CAKA,IACG3I,EAAOsE,GAAM,GAAG0P,QAAUhU,EAAOoB,GAAO,GAAG2S,SAC3C/T,EAAOoB,GAAO,GAAGmC,IAAIkB,OAASzE,EAAOoB,GAAO,GAAGkC,MAAMmB,QAAU,MAE7DzE,EAAOsE,GAAM,GAAGf,IAAIkB,OACnBzE,EAAOsE,GAAM,GAAGhB,MAAMmB,OACtBzE,EAAOoB,GAAO,GAAGmC,IAAIkB,OACrBzE,EAAOoB,GAAO,GAAGkC,MAAMmB,QACzB,GAGF,SAGF0P,EACEnU,EAAOsE,GAAM,GAAGf,IAAIkB,OAASzE,EAAOsE,GAAM,GAAGhB,MAAMmB,OAAS,GAC5DzE,EAAOoB,GAAO,GAAGmC,IAAIkB,OAASzE,EAAOoB,GAAO,GAAGkC,MAAMmB,OAAS,EAC1D,EACA,EACNwP,EAAkB,CAChBhU,KAAMkU,EAAM,EAAI,iBAAmB,mBACnC7Q,MAAOuQ,EAAUvR,EAAQtC,EAAOsE,GAAM,GAAGf,MAAO4Q,GAChD5Q,IAAKjB,EAAQtC,EAAOsE,GAAM,GAAGf,MAE/B2Q,EAAkB,CAChBjU,KAAMkU,EAAM,EAAI,iBAAmB,mBACnC7Q,MAAOhB,EAAQtC,EAAOoB,GAAO,GAAGkC,OAChCC,IAAKsQ,EAAUvR,EAAQtC,EAAOoB,GAAO,GAAGkC,OAAQ6Q,IAElD/P,EAAO,CACLnE,KAAMkU,EAAM,EAAI,aAAe,eAC/B7Q,MAAOhB,EAAQtC,EAAOsE,GAAM,GAAGf,KAC/BA,IAAKjB,EAAQtC,EAAOoB,GAAO,GAAGkC,QAEhCY,EAAQ,CACNjE,KAAMkU,EAAM,EAAI,SAAW,WAC3B7Q,MAAOhB,EAAQ2R,EAAgB3Q,OAC/BC,IAAKjB,EAAQ4R,EAAgB3Q,MAE/BvD,EAAOsE,GAAM,GAAGf,IAAMjB,EAAQ2R,EAAgB3Q,OAC9CtD,EAAOoB,GAAO,GAAGkC,MAAQhB,EAAQ4R,EAAgB3Q,KACjD6Q,EAAa,GAETpU,EAAOsE,GAAM,GAAGf,IAAIkB,OAASzE,EAAOsE,GAAM,GAAGhB,MAAMmB,SACrD2P,EAAahS,EAAYgS,EAAY,CACnC,CAAC,QAASpU,EAAOsE,GAAM,GAAIrD,GAC3B,CAAC,OAAQjB,EAAOsE,GAAM,GAAIrD,MAI9BmT,EAAahS,EAAYgS,EAAY,CACnC,CAAC,QAASlQ,EAAOjD,GACjB,CAAC,QAASgT,EAAiBhT,GAC3B,CAAC,OAAQgT,EAAiBhT,GAC1B,CAAC,QAASmD,EAAMnD,KAGlBmT,EAAahS,EACXgS,EACA/S,EACEJ,EAAQmC,OAAOpC,WAAW2D,WAAWC,KACrC5E,EAAO0E,MAAMJ,EAAO,EAAGlD,GACvBH,IAIJmT,EAAahS,EAAYgS,EAAY,CACnC,CAAC,OAAQhQ,EAAMnD,GACf,CAAC,QAASiT,EAAiBjT,GAC3B,CAAC,OAAQiT,EAAiBjT,GAC1B,CAAC,OAAQiD,EAAOjD,KAGdjB,EAAOoB,GAAO,GAAGmC,IAAIkB,OAASzE,EAAOoB,GAAO,GAAGkC,MAAMmB,QACvDA,EAAS,EACT2P,EAAahS,EAAYgS,EAAY,CACnC,CAAC,QAASpU,EAAOoB,GAAO,GAAIH,GAC5B,CAAC,OAAQjB,EAAOoB,GAAO,GAAIH,MAG7BwD,EAAS,EAGX5C,EAAc7B,EAAQsE,EAAO,EAAGlD,EAAQkD,EAAO,EAAG8P,GAClDhT,EAAQkD,EAAO8P,EAAWjU,OAASsE,EAAS,EAC5C,MAMRrD,GAAS,EAET,OAASA,EAAQpB,EAAOG,QACQ,sBAA1BH,EAAOoB,GAAO,GAAGnB,OACnBD,EAAOoB,GAAO,GAAGnB,KAAO,QAI5B,OAAOD,IAmCTT,EAAOC,QAAUyR,G,iCC/KjB1R,EAAOC,QAFkB,ovC,iCCGzBD,EAAOC,QAPP,SAAmBmP,EAAOlK,GAIxB,OAHAkK,EAAM/F,QAAUnE,EAChBkK,EAAMlK,QAAUA,EAChBkK,EAAM7F,cAAgBrE,EACfkK,I,iCCNT,IAAInN,EAAa,EAAQ,KACrBnB,EAAoB,EAAQ,KAC5BgU,EAAa,EAAQ,KACrB5K,EAAe,EAAQ,KAEvByH,EAAW,CACbtO,KAAM,WACNjC,SAGF,SAA0BC,EAASC,EAAIC,GACrC,IAAIyE,EAAO,EACX,OAEA,SAAe7F,GAMb,OALAkB,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,kBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,kBACb/C,EAAQ6C,MAAM,oBACPa,GAGT,SAASA,EAAK5E,GACZ,OAAI8B,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GACT4U,GAGFD,EAAW3U,GAAQ6U,EAAW7U,GAAQoB,EAAIpB,GAGnD,SAAS4U,EAAmB5U,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAAeW,EAAkBX,GAClE8U,EAAyB9U,GACzB6U,EAAW7U,GAGjB,SAAS8U,EAAyB9U,GAChC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT+U,IAIG,KAAT/U,GAAwB,KAATA,GAAwB,KAATA,GAAeW,EAAkBX,KAChE6F,IAAS,IAET3E,EAAQ8C,QAAQhE,GACT8U,GAGFD,EAAW7U,GAGpB,SAAS+U,EAAU/U,GACjB,OAAa,KAATA,GACFkB,EAAQ+C,KAAK,oBACNJ,EAAI7D,IAGA,KAATA,GAAwB,KAATA,GAAe+J,EAAa/J,GACtCoB,EAAIpB,IAGbkB,EAAQ8C,QAAQhE,GACT+U,GAGT,SAASF,EAAW7U,GAClB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChB6F,EAAO,EACAmP,GAGLL,EAAW3U,IACbkB,EAAQ8C,QAAQhE,GACT6U,GAGFzT,EAAIpB,GAGb,SAASgV,EAAiBhV,GACxB,OAAOW,EAAkBX,GAAQiV,EAAWjV,GAAQoB,EAAIpB,GAG1D,SAASiV,EAAWjV,GAClB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChB6F,EAAO,EACAmP,GAGI,KAAThV,GAEFkB,EAAQ+C,KAAK,oBAAoB1D,KAAO,gBACjCsD,EAAI7D,IAGNkV,EAAWlV,GAGpB,SAASkV,EAAWlV,GAClB,OAAc,KAATA,GAAeW,EAAkBX,KAAU6F,IAAS,IACvD3E,EAAQ8C,QAAQhE,GACA,KAATA,EAAckV,EAAaD,GAG7B7T,EAAIpB,GAGb,SAAS6D,EAAI7D,GAKX,OAJAkB,EAAQ6C,MAAM,kBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,kBACb/C,EAAQ+C,KAAK,YACN9C,KAIXtB,EAAOC,QAAU0R,G,iCC1HjB,IAEImD,EAFa,EAAQ,IAER/T,CAAW,uBAE5Bf,EAAOC,QAAU6U,G,iCCJjB,IAAIlP,EAAgB,EAAQ,IACxB1E,EAAe,EAAQ,IAEvB0Q,EAAa,CACfvO,KAAM,aACNjC,SAOF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIiC,EAAOC,KACX,OAEA,SAAetD,GACb,GAAa,KAATA,EAYF,OAXKqD,EAAKsJ,eAAe/H,OACvB1D,EAAQ6C,MAAM,aAAc,CAC1BkE,YAAY,IAEd5E,EAAKsJ,eAAe/H,MAAO,GAG7B1D,EAAQ6C,MAAM,oBACd7C,EAAQ6C,MAAM,oBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,oBACNmQ,EAGT,OAAOhT,EAAIpB,IAGb,SAASoU,EAAMpU,GACb,OAAIyF,EAAczF,IAChBkB,EAAQ6C,MAAM,8BACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,8BACb/C,EAAQ+C,KAAK,oBACN9C,IAGTD,EAAQ+C,KAAK,oBACN9C,EAAGnB,MAvCZ4M,aAAc,CACZ3L,SA0CJ,SAAwCC,EAASC,EAAIC,GACnD,OAAOL,EACLG,EACAA,EAAQiD,QAAQsN,EAAYtQ,EAAIC,GAChC,aACAkC,KAAKI,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,KA/CNpD,KAmDF,SAAc/C,GACZA,EAAQ+C,KAAK,gBAGfpE,EAAOC,QAAU2R,G,iCChEjB,IAAI0D,EAAmB,EAAQ,KAE3BzD,EAAkB,CACpBxO,KAAM,kBACNjC,SAGF,SAAiCC,EAASC,EAAIC,GAC5C,OAEA,SAAepB,GAKb,OAJAkB,EAAQ6C,MAAM,mBACd7C,EAAQ6C,MAAM,gBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,gBACNW,GAGT,SAASA,EAAK5E,GACZ,OAAImV,EAAiBnV,IACnBkB,EAAQ6C,MAAM,wBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,wBACb/C,EAAQ+C,KAAK,mBACN9C,GAGFC,EAAIpB,MAIfH,EAAOC,QAAU4R,G,iCC/BjB,IAEIyD,EAFa,EAAQ,IAEFvU,CAAW,kBAElCf,EAAOC,QAAUqV,G,iCCJjB,IAAIC,EAAe,EAAQ,KACvBzU,EAAoB,EAAQ,KAC5BmJ,EAAa,EAAQ,KACrBuL,EAAgB,EAAQ,KAE5B,SAASC,EAAsBC,GAC7B,OAAOA,GAAkB,iBAANA,GAAkB,YAAaA,EAAIA,EAAI,CAACC,QAASD,GAGtE,IAAIE,EAAsCH,EAAsBF,GAE5DzD,EAAqB,CACvBzO,KAAM,qBACNjC,SAGF,SAAoCC,EAASC,EAAIC,GAC/C,IAEIsE,EACAzF,EAHAoD,EAAOC,KACPuC,EAAO,EAGX,OAEA,SAAe7F,GAKb,OAJAkB,EAAQ6C,MAAM,sBACd7C,EAAQ6C,MAAM,4BACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,4BACNW,GAGT,SAASA,EAAK5E,GACZ,OAAa,KAATA,GACFkB,EAAQ6C,MAAM,mCACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,mCACNyR,IAGTxU,EAAQ6C,MAAM,2BACd2B,EAAM,GACNzF,EAAOU,EACAoB,EAAM/B,IAGf,SAAS0V,EAAQ1V,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBkB,EAAQ6C,MAAM,uCACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,uCACb/C,EAAQ6C,MAAM,2BACd2B,EAAM,EACNzF,EAAOoV,EACAtT,IAGTb,EAAQ6C,MAAM,2BACd2B,EAAM,EACNzF,EAAO6J,EACA/H,EAAM/B,IAGf,SAAS+B,EAAM/B,GACb,IAAI2E,EAEJ,OAAa,KAAT3E,GAAe6F,GACjBlB,EAAQzD,EAAQ+C,KAAK,2BAGnBhE,IAASU,GACR8U,EAA+B,QAAEpS,EAAKM,eAAegB,KAKxDzD,EAAQ6C,MAAM,4BACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,4BACb/C,EAAQ+C,KAAK,sBACN9C,GAPEC,EAAIpB,IAUXC,EAAKD,IAAS6F,IAASH,GACzBxE,EAAQ8C,QAAQhE,GACT+B,GAGFX,EAAIpB,MAIfH,EAAOC,QAAU6R,G,iCC3FjB,IAEI0D,EAFa,EAAQ,IAELzU,CAAW,cAE/Bf,EAAOC,QAAUuV,G,iCCJjB,IAAIvU,EAAqB,EAAQ,IAC7B2B,EAA4B,EAAQ,IACpC+L,EAAa,EAAQ,KACrBzN,EAAe,EAAQ,IAEvB6Q,EAAa,CACf1O,KAAM,aACNjC,SAIF,SAA4BC,EAASC,EAAIC,GACvC,IAOIyJ,EAPAxH,EAAOC,KACPqS,EAAwB,CAC1B1U,SAuHF,SAA8BC,EAASC,EAAIC,GACzC,IAAIyE,EAAO,EACX,OAAO9E,EACLG,GAQF,SAA8BlB,GAG5B,OAFAkB,EAAQ6C,MAAM,mBACd7C,EAAQ6C,MAAM,2BACPyQ,EAAgBxU,KATvB,aACAsD,KAAKI,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,GASN,SAASmN,EAAgBxU,GACvB,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GAChB6F,IACO2O,GAGL3O,EAAO+P,EAAiBxU,EAAIpB,IAChCkB,EAAQ+C,KAAK,2BACNlD,EAAaG,EAAS2U,EAAoB,aAA1C9U,CAAwDf,IAGjE,SAAS6V,EAAmB7V,GAC1B,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,mBACN9C,EAAGnB,IAGLoB,EAAIpB,KAzJbqB,SAAS,GAEPyU,EAAgBtH,EAAWlL,KAAKhD,OAAQ,cACxCsV,EAAW,EAEf,OAEA,SAAe5V,GAKb,OAJAkB,EAAQ6C,MAAM,cACd7C,EAAQ6C,MAAM,mBACd7C,EAAQ6C,MAAM,2BACd8G,EAAS7K,EACF+V,EAAa/V,IAGtB,SAAS+V,EAAa/V,GACpB,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GAChB4V,IACOG,IAGT7U,EAAQ+C,KAAK,2BACN2R,EAAW,EACdxU,EAAIpB,GACJe,EAAaG,EAAS8U,EAAU,aAAhCjV,CAA8Cf,IAGpD,SAASgW,EAAShW,GAChB,OAAa,OAATA,GAAiBc,EAAmBd,GAC/BiW,EAAUjW,IAGnBkB,EAAQ6C,MAAM,uBACd7C,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAER4I,EAAKxP,IAGd,SAASwP,EAAKxP,GACZ,OAAa,OAATA,GAAiByC,EAA0BzC,IAC7CkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAK,uBACNlD,EAAaG,EAASgV,EAAW,aAAjCnV,CAA+Cf,IAG3C,KAATA,GAAeA,IAAS6K,EAAezJ,EAAIpB,IAC/CkB,EAAQ8C,QAAQhE,GACTwP,GAGT,SAAS0G,EAAUlW,GACjB,OAAa,OAATA,GAAiBc,EAAmBd,GAC/BiW,EAAUjW,IAGnBkB,EAAQ6C,MAAM,uBACd7C,EAAQ6C,MAAM,cAAe,CAC3B6C,YAAa,WAERuP,EAAKnW,IAGd,SAASmW,EAAKnW,GACZ,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAK,uBACNgS,EAAUjW,IAGN,KAATA,GAAeA,IAAS6K,EAAezJ,EAAIpB,IAC/CkB,EAAQ8C,QAAQhE,GACTmW,GAGT,SAASF,EAAUjW,GAEjB,OADAkB,EAAQ+C,KAAK,mBACNZ,EAAK8J,UAAYhM,EAAGnB,GAAQsL,EAAQtL,GAG7C,SAASsL,EAAQtL,GACf,OAAa,OAATA,EACKoU,EAAMpU,GAGXc,EAAmBd,IACrBkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACN/C,EAAQiD,QACbwR,EACAvB,EACA0B,EACI/U,EAAaG,EAASoK,EAAS,aAAcwK,EAAgB,GAC7DxK,KAIRpK,EAAQ6C,MAAM,iBACP6K,EAAgB5O,IAGzB,SAAS4O,EAAgB5O,GACvB,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,iBACNqH,EAAQtL,KAGjBkB,EAAQ8C,QAAQhE,GACT4O,GAGT,SAASwF,EAAMpU,GAEb,OADAkB,EAAQ+C,KAAK,cACN9C,EAAGnB,KA1HZgN,UAAU,GAqKZnN,EAAOC,QAAU8R,G,iCC7KjB,IAAI9Q,EAAqB,EAAQ,IAC7BqB,EAAgB,EAAQ,IACxBqM,EAAa,EAAQ,KACrBzN,EAAe,EAAQ,IAEvB8Q,EAAe,CACjB3O,KAAM,eACNjC,SAmBF,SAA8BC,EAASC,EAAIC,GACzC,OAAOF,EAAQiD,QAAQiS,EAA0BC,EAAajV,GAE9D,SAASiV,EAAYrW,GACnB,OAAa,OAATA,EACKmB,EAAGnB,GAGRc,EAAmBd,GACdkB,EAAQiD,QAAQiS,EAA0BC,EAAalV,EAAvDD,CAA2DlB,IAGpEkB,EAAQ6C,MAAM,iBACPuH,EAAQtL,IAGjB,SAASsL,EAAQtL,GACf,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,iBACNoS,EAAYrW,KAGrBkB,EAAQ8C,QAAQhE,GACTsL,KAzCT9J,QAOF,SAA6BlB,EAAQiB,GACnC,IAAIvB,EAAO,CACTO,KAAM,eACNqD,MAAOtD,EAAO,GAAG,GAAGsD,MACpBC,IAAKvD,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,KAIpC,OAFA1B,EAAc7B,EAAQ,EAAG,EAAG,CAAC,CAAC,QAASN,EAAMuB,KAC7CY,EAAc7B,EAAQA,EAAOG,OAAQ,EAAG,CAAC,CAAC,OAAQT,EAAMuB,KACjDjB,IAbL8V,EAA2B,CAC7BnV,SA0CF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIiC,EAAOC,KACX,OAAOvC,EAAaG,GAEpB,SAASmV,EAAYrW,GACnB,GAAIc,EAAmBd,GAIrB,OAHAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EAAaG,EAASmV,EAAa,aAAc,GAG1D,OAAO7H,EAAWnL,EAAK/C,OAAQ,cAAgB,EAAIc,EAAIpB,GAAQmB,EAAGnB,KAV1B,aAAc,IA3CxDqB,SAAS,GAyDXxB,EAAOC,QAAU+R,G,iCCrEjB,IAAI/Q,EAAqB,EAAQ,IAE7BgR,EAAW,CACb5O,KAAM,WACNjC,SAmEF,SAA0BC,EAASC,EAAIC,GACrC,IACIyE,EACAlB,EAFAiR,EAAW,EAGf,OAEA,SAAe5V,GAGb,OAFAkB,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,oBACPwQ,EAAgBvU,IAGzB,SAASuU,EAAgBvU,GACvB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChB4V,IACOrB,IAGTrT,EAAQ+C,KAAK,oBACNqS,EAAItW,IAGb,SAASsW,EAAItW,GAEX,OAAa,OAATA,EACKoB,EAAIpB,GAIA,KAATA,GACF2E,EAAQzD,EAAQ6C,MAAM,oBACtB8B,EAAO,EACA2O,EAAgBxU,IAGZ,KAATA,GACFkB,EAAQ6C,MAAM,SACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,SACNqS,GAGLxV,EAAmBd,IACrBkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNqS,IAGTpV,EAAQ6C,MAAM,gBACP4E,EAAK3I,IAGd,SAAS2I,EAAK3I,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAc,EAAmBd,IAEnBkB,EAAQ+C,KAAK,gBACNqS,EAAItW,KAGbkB,EAAQ8C,QAAQhE,GACT2I,GAGT,SAAS6L,EAAgBxU,GAEvB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChB6F,IACO2O,GAGL3O,IAAS+P,GACX1U,EAAQ+C,KAAK,oBACb/C,EAAQ+C,KAAK,YACN9C,EAAGnB,KAGZ2E,EAAMpE,KAAO,eACNoI,EAAK3I,MAtJdwB,QAIF,SAAyBlB,GACvB,IAEIoB,EACAqC,EAHAwS,EAAgBjW,EAAOG,OAAS,EAChC+V,EAAiB,EAIrB,KACsC,eAAnClW,EAAOkW,GAAgB,GAAGjW,MACU,UAAnCD,EAAOkW,GAAgB,GAAGjW,MACO,eAAlCD,EAAOiW,GAAe,GAAGhW,MACU,UAAlCD,EAAOiW,GAAe,GAAGhW,MAI3B,IAFAmB,EAAQ8U,IAEC9U,EAAQ6U,GACf,GAA8B,iBAA1BjW,EAAOoB,GAAO,GAAGnB,KAAyB,CAE5CD,EAAOiW,GAAe,GAAGhW,KAAOD,EAAOkW,GAAgB,GAAGjW,KACxD,kBACFiW,GAAkB,EAClBD,GAAiB,EACjB,MAKN7U,EAAQ8U,EAAiB,EACzBD,IAEA,OAAS7U,GAAS6U,QACFlP,IAAVtD,EACErC,IAAU6U,GAA2C,eAA1BjW,EAAOoB,GAAO,GAAGnB,OAC9CwD,EAAQrC,GAGVA,IAAU6U,GACgB,eAA1BjW,EAAOoB,GAAO,GAAGnB,OAEjBD,EAAOyD,GAAO,GAAGxD,KAAO,eAEpBmB,IAAUqC,EAAQ,IACpBzD,EAAOyD,GAAO,GAAGF,IAAMvD,EAAOoB,EAAQ,GAAG,GAAGmC,IAC5CvD,EAAO8E,OAAOrB,EAAQ,EAAGrC,EAAQqC,EAAQ,GACzCwS,GAAiB7U,EAAQqC,EAAQ,EACjCrC,EAAQqC,EAAQ,GAGlBA,OAAQsD,GAIZ,OAAO/G,GAtDP+F,SAyDF,SAAkBrG,GAEhB,OACW,KAATA,GACgD,oBAAhDsD,KAAKhD,OAAOgD,KAAKhD,OAAOG,OAAS,GAAG,GAAGF,OA4F3CV,EAAOC,QAAUgS,G,iCC/JjB,IAAIhR,EAAqB,EAAQ,IAC7B2B,EAA4B,EAAQ,IACpCE,EAAsB,EAAQ,KAC9BE,EAAqB,EAAQ,KAC7BC,EAAe,EAAQ,KACvB/B,EAAe,EAAQ,IACvBiC,EAAoB,EAAQ,KAC5BD,EAAe,EAAQ,KAEvBgP,EAAa,CACf7O,KAAM,aACNjC,SAOF,SAA4BC,EAASC,EAAIC,GACvC,IACIqV,EADApT,EAAOC,KAEX,OAEA,SAAetD,GAEb,OADAkB,EAAQ6C,MAAM,cACPjB,EAAayC,KAClBlC,EACAnC,EACAwV,EACAtV,EACA,kBACA,wBACA,wBAPK0B,CAQL9C,IAGJ,SAAS0W,EAAW1W,GAKlB,OAJAyW,EAAa9T,EACXU,EAAKM,eAAeN,EAAK/C,OAAO+C,EAAK/C,OAAOG,OAAS,GAAG,IAAIuE,MAAM,GAAI,IAG3D,KAAThF,GACFkB,EAAQ6C,MAAM,oBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,oBAENjB,EACL9B,EACA2B,EACE3B,EACAA,EAAQiD,QACNwS,EACA5V,EAAaG,EAASkT,EAAO,cAC7BrT,EAAaG,EAASkT,EAAO,eAE/BhT,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAIpB,GAGb,SAASoU,EAAMpU,GACb,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,cAETZ,EAAKK,OAAON,QAAQxB,QAAQ6U,GAAc,GAC5CpT,EAAKK,OAAON,QAAQvB,KAAK4U,GAGpBtV,EAAGnB,IAGLoB,EAAIpB,MAlEX2W,EAAiB,CACnB1V,SAqEF,SAAuBC,EAASC,EAAIC,GAClC,OAEA,SAAepB,GACb,OAAOyC,EAA0BzC,GAC7BgD,EAAkB9B,EAAS0I,EAA3B5G,CAAmChD,GACnCoB,EAAIpB,IAGV,SAAS4J,EAAO5J,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzB+C,EACL7B,EACAH,EAAaG,EAASkT,EAAO,cAC7BhT,EACA,kBACA,wBACA,wBANK2B,CAOL/C,GAGGoB,EAAIpB,GAGb,SAASoU,EAAMpU,GACb,OAAgB,OAATA,GAAiBc,EAAmBd,GAAQmB,EAAGnB,GAAQoB,EAAIpB,KA7FpEqB,SAAS,GAiGXxB,EAAOC,QAAUiS,G,iCChHjB,IAAIjR,EAAqB,EAAQ,IAE7BkR,EAAkB,CACpB9O,KAAM,kBACNjC,SAGF,SAAiCC,EAASC,EAAIC,GAC5C,OAEA,SAAepB,GAIb,OAHAkB,EAAQ6C,MAAM,mBACd7C,EAAQ6C,MAAM,gBACd7C,EAAQ8C,QAAQhE,GACT4E,GAGT,SAASA,EAAK5E,GACZ,OAAIc,EAAmBd,IACrBkB,EAAQ+C,KAAK,gBACb/C,EAAQ+C,KAAK,mBACN9C,EAAGnB,IAGLoB,EAAIpB,MAIfH,EAAOC,QAAUkS,G,iCC5BjB,IAAIlR,EAAqB,EAAQ,IAC7B2B,EAA4B,EAAQ,IACpCgD,EAAgB,EAAQ,IACxBtD,EAAgB,EAAQ,IACxBpB,EAAe,EAAQ,IAEvBkR,EAAa,CACf/O,KAAM,aACNjC,SAqDF,SAA4BC,EAASC,EAAIC,GACvC,IAAIiC,EAAOC,KACPuC,EAAO,EACX,OAEA,SAAe7F,GAGb,OAFAkB,EAAQ6C,MAAM,cACd7C,EAAQ6C,MAAM,sBACP6S,EAAgB5W,IAGzB,SAAS4W,EAAgB5W,GACvB,OAAa,KAATA,GAAe6F,IAAS,GAC1B3E,EAAQ8C,QAAQhE,GACT4W,GAGI,OAAT5W,GAAiByC,EAA0BzC,IAC7CkB,EAAQ+C,KAAK,sBACNZ,EAAK8J,UAAYhM,EAAGnB,GAAQ6W,EAAa7W,IAG3CoB,EAAIpB,GAGb,SAAS6W,EAAa7W,GACpB,OAAa,KAATA,GACFkB,EAAQ6C,MAAM,sBACPoH,EAASnL,IAGL,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,cACN9C,EAAGnB,IAGRyF,EAAczF,GACTe,EAAaG,EAAS2V,EAAc,aAApC9V,CAAkDf,IAG3DkB,EAAQ6C,MAAM,kBACP4E,EAAK3I,IAGd,SAASmL,EAASnL,GAChB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTmL,IAGTjK,EAAQ+C,KAAK,sBACN4S,EAAa7W,IAGtB,SAAS2I,EAAK3I,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAeyC,EAA0BzC,IAC5DkB,EAAQ+C,KAAK,kBACN4S,EAAa7W,KAGtBkB,EAAQ8C,QAAQhE,GACT2I,KAjHTnH,QAGF,SAA2BlB,EAAQiB,GACjC,IAEI+J,EACA5G,EAHAgK,EAAapO,EAAOG,OAAS,EAC7BuL,EAAe,EAIkB,eAAjC1L,EAAO0L,GAAc,GAAGzL,OAC1ByL,GAAgB,GAIhB0C,EAAa,EAAI1C,GACc,eAA/B1L,EAAOoO,GAAY,GAAGnO,OAEtBmO,GAAc,GAIiB,uBAA/BpO,EAAOoO,GAAY,GAAGnO,OACrByL,IAAiB0C,EAAa,GAC5BA,EAAa,EAAI1C,GACmB,eAAnC1L,EAAOoO,EAAa,GAAG,GAAGnO,QAE9BmO,GAAc1C,EAAe,IAAM0C,EAAa,EAAI,GAGlDA,EAAa1C,IACfV,EAAU,CACR/K,KAAM,iBACNqD,MAAOtD,EAAO0L,GAAc,GAAGpI,MAC/BC,IAAKvD,EAAOoO,GAAY,GAAG7K,KAE7Ba,EAAO,CACLnE,KAAM,YACNqD,MAAOtD,EAAO0L,GAAc,GAAGpI,MAC/BC,IAAKvD,EAAOoO,GAAY,GAAG7K,IAC3B+C,YAAa,QAEfzE,EAAc7B,EAAQ0L,EAAc0C,EAAa1C,EAAe,EAAG,CACjE,CAAC,QAASV,EAAS/J,GACnB,CAAC,QAASmD,EAAMnD,GAChB,CAAC,OAAQmD,EAAMnD,GACf,CAAC,OAAQ+J,EAAS/J,MAItB,OAAOjB,IAoETT,EAAOC,QAAUmS,G,iCC9HjB,IAAInQ,EAAa,EAAQ,KACrBnB,EAAoB,EAAQ,KAC5BG,EAAqB,EAAQ,IAC7B2B,EAA4B,EAAQ,IACpCgD,EAAgB,EAAQ,IACxB7F,EAAe,EAAQ,KACvBkX,EAAiB,EAAQ,KACzBC,EAAe,EAAQ,KACvB/V,EAAmB,EAAQ,KAE3BkR,EAAW,CACbhP,KAAM,WACNjC,SA8BF,SAA0BC,EAASC,EAAIC,GACrC,IACI4V,EACAC,EACAC,EACAxV,EACAmJ,EALAxH,EAAOC,KAMX,OAEA,SAAetD,GAIb,OAHAkB,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,gBACd7C,EAAQ8C,QAAQhE,GACT4E,GAGT,SAASA,EAAK5E,GACZ,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTmX,GAGI,KAATnX,GACFkB,EAAQ8C,QAAQhE,GACToX,GAGI,KAATpX,GACFkB,EAAQ8C,QAAQhE,GAChBgX,EAAO,EAGA3T,EAAK8J,UAAYhM,EAAKkW,GAG3BvV,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GAChBkX,EAAStX,EAAaI,GACtBiX,GAAW,EACJK,GAGFlW,EAAIpB,GAGb,SAASmX,EAAiBnX,GACxB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChBgX,EAAO,EACAO,GAGI,KAATvX,GACFkB,EAAQ8C,QAAQhE,GAChBgX,EAAO,EACPE,EAAS,SACTxV,EAAQ,EACD8V,GAGL1V,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GAChBgX,EAAO,EACA3T,EAAK8J,UAAYhM,EAAKkW,GAGxBjW,EAAIpB,GAGb,SAASuX,EAAkBvX,GACzB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTqD,EAAK8J,UAAYhM,EAAKkW,GAGxBjW,EAAIpB,GAGb,SAASwX,EAAgBxX,GACvB,OAAIA,IAASkX,EAAOjO,WAAWvH,MAC7BR,EAAQ8C,QAAQhE,GACT0B,IAAUwV,EAAOzW,OACpB4C,EAAK8J,UACHhM,EACAyL,EACF4K,GAGCpW,EAAIpB,GAGb,SAASoX,EAAcpX,GACrB,OAAI8B,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GAChBkX,EAAStX,EAAaI,GACfsX,GAGFlW,EAAIpB,GAGb,SAASsX,EAAQtX,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACAyC,EAA0BzC,GAGf,KAATA,GACAiX,GACAF,EAAanV,QAAQsV,EAAOjV,gBAAkB,GAE9C+U,EAAO,EACA3T,EAAK8J,UAAYhM,EAAGnB,GAAQ4M,EAAa5M,IAG9C8W,EAAelV,QAAQsV,EAAOjV,gBAAkB,GAClD+U,EAAO,EAEM,KAAThX,GACFkB,EAAQ8C,QAAQhE,GACTyX,GAGFpU,EAAK8J,UAAYhM,EAAGnB,GAAQ4M,EAAa5M,KAGlDgX,EAAO,EAEA3T,EAAK8J,UACR/L,EAAIpB,GACJiX,EACAS,EAA4B1X,GAC5B2X,EAAwB3X,IAGjB,KAATA,GAAeW,EAAkBX,IACnCkB,EAAQ8C,QAAQhE,GAChBkX,GAAUtX,EAAaI,GAChBsX,GAGFlW,EAAIpB,GAGb,SAASyX,EAAiBzX,GACxB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTqD,EAAK8J,UAAYhM,EAAKyL,GAGxBxL,EAAIpB,GAGb,SAAS2X,EAAwB3X,GAC/B,OAAIyF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT2X,GAGFC,EAAY5X,GAGrB,SAAS0X,EAA4B1X,GACnC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT4X,GAGI,KAAT5X,GAAwB,KAATA,GAAe8B,EAAW9B,IAC3CkB,EAAQ8C,QAAQhE,GACT6X,GAGLpS,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT0X,GAGFE,EAAY5X,GAGrB,SAAS6X,EAAsB7X,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAW,EAAkBX,IAElBkB,EAAQ8C,QAAQhE,GACT6X,GAGFC,EAA2B9X,GAGpC,SAAS8X,EAA2B9X,GAClC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT+X,GAGLtS,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT8X,GAGFJ,EAA4B1X,GAGrC,SAAS+X,EAA6B/X,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoB,EAAIpB,GAGA,KAATA,GAAwB,KAATA,GACjBkB,EAAQ8C,QAAQhE,GAChB6K,EAAS7K,EACFgY,GAGLvS,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT+X,IAGTlN,OAASxD,EACF4Q,EAA+BjY,IAGxC,SAASgY,EAA6BhY,GACpC,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GACTkY,GAGI,OAATlY,GAAiBc,EAAmBd,GAC/BoB,EAAIpB,IAGbkB,EAAQ8C,QAAQhE,GACTgY,GAGT,SAASC,EAA+BjY,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAyC,EAA0BzC,GAEnB8X,EAA2B9X,IAGpCkB,EAAQ8C,QAAQhE,GACTiY,GAGT,SAASC,EAAkClY,GACzC,OAAa,KAATA,GAAwB,KAATA,GAAeyF,EAAczF,GACvC0X,EAA4B1X,GAG9BoB,EAAIpB,GAGb,SAAS4X,EAAY5X,GACnB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTmY,GAGF/W,EAAIpB,GAGb,SAASmY,EAAcnY,GACrB,OAAIyF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACTmY,GAGO,OAATnY,GAAiBc,EAAmBd,GACvC4M,EAAa5M,GACboB,EAAIpB,GAGV,SAAS4M,EAAa5M,GACpB,OAAa,KAATA,GAAwB,IAATgX,GACjB9V,EAAQ8C,QAAQhE,GACToY,GAGI,KAATpY,GAAwB,IAATgX,GACjB9V,EAAQ8C,QAAQhE,GACTqY,GAGI,KAATrY,GAAwB,IAATgX,GACjB9V,EAAQ8C,QAAQhE,GACTsY,GAGI,KAATtY,GAAwB,IAATgX,GACjB9V,EAAQ8C,QAAQhE,GACTqX,GAGI,KAATrX,GAAwB,IAATgX,GACjB9V,EAAQ8C,QAAQhE,GACTuY,IAGLzX,EAAmBd,IAAmB,IAATgX,GAAuB,IAATA,EAQlC,OAAThX,GAAiBc,EAAmBd,GAC/BwY,EAAyBxY,IAGlCkB,EAAQ8C,QAAQhE,GACT4M,GAZE1L,EAAQwM,MACb+K,EACAH,EACAE,EAHKtX,CAILlB,GAWN,SAASwY,EAAyBxY,GAEhC,OADAkB,EAAQ+C,KAAK,gBACNyU,EAAkB1Y,GAG3B,SAAS0Y,EAAkB1Y,GACzB,OAAa,OAATA,EACK2Y,EAAK3Y,GAGVc,EAAmBd,IACrBkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNyU,IAGTxX,EAAQ6C,MAAM,gBACP6I,EAAa5M,IAGtB,SAASoY,EAA0BpY,GACjC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTqX,GAGFzK,EAAa5M,GAGtB,SAASqY,EAAuBrY,GAC9B,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChBkX,EAAS,GACF0B,GAGFhM,EAAa5M,GAGtB,SAAS4Y,EAAsB5Y,GAC7B,OAAa,KAATA,GAAe+W,EAAanV,QAAQsV,EAAOjV,gBAAkB,GAC/Df,EAAQ8C,QAAQhE,GACTsY,GAGLxW,EAAW9B,IAASkX,EAAOzW,OAAS,GACtCS,EAAQ8C,QAAQhE,GAChBkX,GAAUtX,EAAaI,GAChB4Y,GAGFhM,EAAa5M,GAGtB,SAASuY,EAAgCvY,GACvC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTqX,GAGFzK,EAAa5M,GAGtB,SAASqX,EAA8BrX,GACrC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTsY,GAGF1L,EAAa5M,GAGtB,SAASsY,EAAkBtY,GACzB,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,gBACN0U,EAAK3Y,KAGdkB,EAAQ8C,QAAQhE,GACTsY,GAGT,SAASK,EAAK3Y,GAEZ,OADAkB,EAAQ+C,KAAK,YACN9C,EAAGnB,KAtcZuE,UAQF,SAA2BjE,GACzB,IAAIoB,EAAQpB,EAAOG,OAEnB,KAAOiB,MACoB,UAArBpB,EAAOoB,GAAO,IAA4C,aAA1BpB,EAAOoB,GAAO,GAAGnB,QAKnDmB,EAAQ,GAAmC,eAA9BpB,EAAOoB,EAAQ,GAAG,GAAGnB,OAEpCD,EAAOoB,GAAO,GAAGkC,MAAQtD,EAAOoB,EAAQ,GAAG,GAAGkC,MAE9CtD,EAAOoB,EAAQ,GAAG,GAAGkC,MAAQtD,EAAOoB,EAAQ,GAAG,GAAGkC,MAElDtD,EAAO8E,OAAO1D,EAAQ,EAAG,IAG3B,OAAOpB,GAzBP0M,UAAU,GAERyL,EAAqB,CACvBxX,SAscF,SAA2BC,EAASC,EAAIC,GACtC,OAEA,SAAepB,GAKb,OAJAkB,EAAQ+C,KAAK,gBACb/C,EAAQ6C,MAAM,mBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,mBACN/C,EAAQiD,QAAQnD,EAAkBG,EAAIC,KA7c/CC,SAAS,GAidXxB,EAAOC,QAAUoS,G,iCCjajBrS,EAAOC,QAjEM,CACX,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,SACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,O,iCC5DFD,EAAOC,QAFI,CAAC,MAAO,SAAU,QAAS,a,iCCDtC,IAAIgC,EAAa,EAAQ,KACrBnB,EAAoB,EAAQ,KAC5BG,EAAqB,EAAQ,IAC7B2B,EAA4B,EAAQ,IACpCgD,EAAgB,EAAQ,IACxB1E,EAAe,EAAQ,IAEvBoR,EAAW,CACbjP,KAAM,WACNjC,SAGF,SAA0BC,EAASC,EAAIC,GACrC,IACIyJ,EACAqM,EACAxV,EACAuO,EAJA5M,EAAOC,KAKX,OAEA,SAAetD,GAIb,OAHAkB,EAAQ6C,MAAM,YACd7C,EAAQ6C,MAAM,gBACd7C,EAAQ8C,QAAQhE,GACT4E,GAGT,SAASA,EAAK5E,GACZ,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT6Y,GAGI,KAAT7Y,GACFkB,EAAQ8C,QAAQhE,GACToX,GAGI,KAATpX,GACFkB,EAAQ8C,QAAQhE,GACT8Y,GAGLhX,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GACT+Y,GAGF3X,EAAIpB,GAGb,SAAS6Y,EAAgB7Y,GACvB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTgZ,GAGI,KAAThZ,GACFkB,EAAQ8C,QAAQhE,GAChBkX,EAAS,SACTxV,EAAQ,EACDuX,GAGLnX,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GACTkZ,GAGF9X,EAAIpB,GAGb,SAASgZ,EAAYhZ,GACnB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTmZ,GAGF/X,EAAIpB,GAGb,SAASmZ,EAAanZ,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZoB,EAAIpB,GAGA,KAATA,GACFkB,EAAQ8C,QAAQhE,GACToZ,GAGFC,EAAQrZ,GAGjB,SAASoZ,EAAiBpZ,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZoB,EAAIpB,GAGNqZ,EAAQrZ,GAGjB,SAASqZ,EAAQrZ,GACf,OAAa,OAATA,EACKoB,EAAIpB,GAGA,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTsZ,GAGLxY,EAAmBd,IACrBiQ,EAAcoJ,EACPE,EAAavZ,KAGtBkB,EAAQ8C,QAAQhE,GACTqZ,GAGT,SAASC,EAAatZ,GACpB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT6D,GAGFwV,EAAQrZ,GAGjB,SAASiZ,EAAUjZ,GACjB,OAAIA,IAASkX,EAAOjO,WAAWvH,MAC7BR,EAAQ8C,QAAQhE,GACT0B,IAAUwV,EAAOzW,OAAS+Y,EAAQP,GAGpC7X,EAAIpB,GAGb,SAASwZ,EAAMxZ,GACb,OAAa,OAATA,EACKoB,EAAIpB,GAGA,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTyZ,GAGL3Y,EAAmBd,IACrBiQ,EAAcuJ,EACPD,EAAavZ,KAGtBkB,EAAQ8C,QAAQhE,GACTwZ,GAGT,SAASC,EAAWzZ,GAClB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT0Z,GAGFF,EAAMxZ,GAGf,SAAS0Z,EAAS1Z,GAChB,OAAa,KAATA,EACK6D,EAAI7D,GAGA,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT0Z,GAGFF,EAAMxZ,GAGf,SAASkZ,EAAYlZ,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZ6D,EAAI7D,GAGTc,EAAmBd,IACrBiQ,EAAciJ,EACPK,EAAavZ,KAGtBkB,EAAQ8C,QAAQhE,GACTkZ,GAGT,SAASJ,EAAY9Y,GACnB,OAAa,OAATA,EACKoB,EAAIpB,GAGA,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT2Z,GAGL7Y,EAAmBd,IACrBiQ,EAAc6I,EACPS,EAAavZ,KAGtBkB,EAAQ8C,QAAQhE,GACT8Y,GAGT,SAASa,EAAiB3Z,GACxB,OAAgB,KAATA,EAAc6D,EAAI7D,GAAQ8Y,EAAY9Y,GAG/C,SAASoX,EAAcpX,GACrB,OAAI8B,EAAW9B,IACbkB,EAAQ8C,QAAQhE,GACT4Z,GAGFxY,EAAIpB,GAGb,SAAS4Z,EAAS5Z,GAChB,OAAa,KAATA,GAAeW,EAAkBX,IACnCkB,EAAQ8C,QAAQhE,GACT4Z,GAGFC,EAAgB7Z,GAGzB,SAAS6Z,EAAgB7Z,GACvB,OAAIc,EAAmBd,IACrBiQ,EAAc4J,EACPN,EAAavZ,IAGlByF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT6Z,GAGFhW,EAAI7D,GAGb,SAAS+Y,EAAQ/Y,GACf,OAAa,KAATA,GAAeW,EAAkBX,IACnCkB,EAAQ8C,QAAQhE,GACT+Y,GAGI,KAAT/Y,GAAwB,KAATA,GAAeyC,EAA0BzC,GACnD8Z,EAAe9Z,GAGjBoB,EAAIpB,GAGb,SAAS8Z,EAAe9Z,GACtB,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACT6D,GAGI,KAAT7D,GAAwB,KAATA,GAAe8B,EAAW9B,IAC3CkB,EAAQ8C,QAAQhE,GACT+Z,GAGLjZ,EAAmBd,IACrBiQ,EAAc6J,EACPP,EAAavZ,IAGlByF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACT8Z,GAGFjW,EAAI7D,GAGb,SAAS+Z,EAAqB/Z,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACAW,EAAkBX,IAElBkB,EAAQ8C,QAAQhE,GACT+Z,GAGFC,EAA0Bha,GAGnC,SAASga,EAA0Bha,GACjC,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GACTia,GAGLnZ,EAAmBd,IACrBiQ,EAAc+J,EACPT,EAAavZ,IAGlByF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACTga,GAGFF,EAAe9Z,GAGxB,SAASia,EAA4Bja,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoB,EAAIpB,GAGA,KAATA,GAAwB,KAATA,GACjBkB,EAAQ8C,QAAQhE,GAChB6K,EAAS7K,EACFka,GAGLpZ,EAAmBd,IACrBiQ,EAAcgK,EACPV,EAAavZ,IAGlByF,EAAczF,IAChBkB,EAAQ8C,QAAQhE,GACTia,IAGT/Y,EAAQ8C,QAAQhE,GAChB6K,OAASxD,EACF8S,GAGT,SAASD,EAA4Bla,GACnC,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GACToa,GAGI,OAATpa,EACKoB,EAAIpB,GAGTc,EAAmBd,IACrBiQ,EAAciK,EACPX,EAAavZ,KAGtBkB,EAAQ8C,QAAQhE,GACTka,GAGT,SAASE,EAAiCpa,GACxC,OAAa,KAATA,GAAwB,KAATA,GAAeyC,EAA0BzC,GACnD8Z,EAAe9Z,GAGjBoB,EAAIpB,GAGb,SAASma,EAA8Bna,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoB,EAAIpB,GAGA,KAATA,GAAeyC,EAA0BzC,GACpC8Z,EAAe9Z,IAGxBkB,EAAQ8C,QAAQhE,GACTma,GAIT,SAASZ,EAAavZ,GAKpB,OAJAkB,EAAQ+C,KAAK,gBACb/C,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EACLG,EACAmV,EACA,aACAhT,EAAKK,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,GAIR,SAASgP,EAAYrW,GAEnB,OADAkB,EAAQ6C,MAAM,gBACPkM,EAAYjQ,GAGrB,SAAS6D,EAAI7D,GACX,OAAa,KAATA,GACFkB,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,gBACb/C,EAAQ+C,KAAK,YACN9C,GAGFC,EAAIpB,MAIfH,EAAOC,QAAUqS,G,iCChbjB,IAEIC,EAAkB,CACpBlP,KAAM,kBACNjC,SAIF,SAAiCC,EAASC,EAAIC,GAC5C,IAAIiC,EAAOC,KACX,OAEA,SAAetD,GAKb,OAJAkB,EAAQ6C,MAAM,cACd7C,EAAQ6C,MAAM,oBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,oBACNW,GAGT,SAASA,EAAK5E,GACZ,OAAa,KAATA,GACFkB,EAAQ6C,MAAM,eACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAK,cACNmQ,GAGFhT,EAAIpB,GAGb,SAASoU,EAAMpU,GAEb,OAAgB,KAATA,GAEL,2BAA4BqD,EAAKK,OAAOpC,WAEtCF,EAAIpB,GACJmB,EAAGnB,KAlCT2B,WALa,EAAQ,KAKAA,YAsCvB9B,EAAOC,QAAUsS,G,iCC3CjB,IAEIC,EAAiB,CACnBnP,KAAM,iBACNjC,SAIF,SAAgCC,EAASC,EAAIC,GAC3C,IAAIiC,EAAOC,KACX,OAEA,SAAetD,GAMb,OALAkB,EAAQ6C,MAAM,aACd7C,EAAQ6C,MAAM,eACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,eACb/C,EAAQ+C,KAAK,aACNmQ,GAGT,SAASA,EAAMpU,GAEb,OAAgB,KAATA,GAEL,2BAA4BqD,EAAKK,OAAOpC,WAEtCF,EAAIpB,GACJmB,EAAGnB,KAvBT2B,WALa,EAAQ,KAKAA,YA2BvB9B,EAAOC,QAAUuS,G,iCChCjB,IAAItR,EAAe,EAAQ,IAEvBuR,EAAa,CACfpP,KAAM,aACNjC,SAGF,SAA4BC,EAASC,GACnC,OAEA,SAAenB,GAIb,OAHAkB,EAAQ6C,MAAM,cACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,cACNlD,EAAaG,EAASC,EAAI,iBAIrCtB,EAAOC,QAAUwS,G,iCClBjB,IAAIxI,EAAa,EAAQ,KACrBrE,EAAgB,EAAQ,IACxB+I,EAAa,EAAQ,KACrBnO,EAAa,EAAQ,KACrBU,EAAe,EAAQ,IACvBC,EAAmB,EAAQ,KAC3BkK,EAAgB,EAAQ,KAExB9I,EAAO,CACTc,KAAM,OACNjC,SAeF,SAA2BC,EAASC,EAAIC,GACtC,IAAIiC,EAAOC,KACP+W,EAAc7L,EAAWnL,EAAK/C,OAAQ,cACtCuF,EAAO,EACX,OAEA,SAAe7F,GACb,IAAIgX,EACF3T,EAAKsJ,eAAepM,OACV,KAATP,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAATgX,GACK3T,EAAKsJ,eAAe9B,QAAU7K,IAASqD,EAAKsJ,eAAe9B,OAC5Df,EAAW9J,GACf,CAQA,GAPKqD,EAAKsJ,eAAepM,OACvB8C,EAAKsJ,eAAepM,KAAOyW,EAC3B9V,EAAQ6C,MAAMiT,EAAM,CAClB/O,YAAY,KAIH,kBAAT+O,EAEF,OADA9V,EAAQ6C,MAAM,kBACE,KAAT/D,GAAwB,KAATA,EAClBkB,EAAQwM,MAAMxC,EAAe9J,EAAKkZ,EAAlCpZ,CAA4ClB,GAC5Csa,EAASta,GAGf,IAAKqD,EAAK8J,WAAsB,KAATnN,EAGrB,OAFAkB,EAAQ6C,MAAM,kBACd7C,EAAQ6C,MAAM,iBACPwW,EAAOva,GAIlB,OAAOoB,EAAIpB,IAGb,SAASua,EAAOva,GACd,OAAI8J,EAAW9J,MAAW6F,EAAO,IAC/B3E,EAAQ8C,QAAQhE,GACTua,KAILlX,EAAK8J,WAAatH,EAAO,KAC1BxC,EAAKsJ,eAAe9B,OACjB7K,IAASqD,EAAKsJ,eAAe9B,OACpB,KAAT7K,GAAwB,KAATA,IAEnBkB,EAAQ+C,KAAK,iBACNqW,EAASta,IAGXoB,EAAIpB,GAGb,SAASsa,EAASta,GAKhB,OAJAkB,EAAQ6C,MAAM,kBACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,kBACbZ,EAAKsJ,eAAe9B,OAASxH,EAAKsJ,eAAe9B,QAAU7K,EACpDkB,EAAQwM,MACb1M,EACAqC,EAAK8J,UAAY/L,EAAMoZ,EACvBtZ,EAAQiD,QACNsW,EACAC,EACAC,IAKN,SAASH,EAAQxa,GAGf,OAFAqD,EAAKsJ,eAAeiO,kBAAmB,EACvCP,IACOK,EAAY1a,GAGrB,SAAS2a,EAAY3a,GACnB,OAAIyF,EAAczF,IAChBkB,EAAQ6C,MAAM,4BACd7C,EAAQ8C,QAAQhE,GAChBkB,EAAQ+C,KAAK,4BACNyW,GAGFtZ,EAAIpB,GAGb,SAAS0a,EAAY1a,GAGnB,OAFAqD,EAAKsJ,eAAe9G,KAClBwU,EAAcha,EAAWgD,EAAK3C,YAAYQ,EAAQ+C,KAAK,oBAClD9C,EAAGnB,KA/GZ4M,aAAc,CACZ3L,SAkHJ,SAAkCC,EAASC,EAAIC,GAC7C,IAAIiC,EAAOC,KAEX,OADAD,EAAKsJ,eAAeY,gBAAalG,EAC1BnG,EAAQwM,MAAM1M,GAErB,SAAiBhB,GAMf,OALAqD,EAAKsJ,eAAekO,kBAClBxX,EAAKsJ,eAAekO,mBACpBxX,EAAKsJ,eAAeiO,iBAGf7Z,EACLG,EACAC,EACA,iBACAkC,EAAKsJ,eAAe9G,KAAO,EAJtB9E,CAKLf,MAGJ,SAAkBA,GAChB,GAAIqD,EAAKsJ,eAAekO,oBAAsBpV,EAAczF,GAE1D,OADAqD,EAAKsJ,eAAekO,kBAAoBxX,EAAKsJ,eAAeiO,sBAAmBvT,EACxEyT,EAAiB9a,GAI1B,OADAqD,EAAKsJ,eAAekO,kBAAoBxX,EAAKsJ,eAAeiO,sBAAmBvT,EACxEnG,EAAQiD,QAAQ4W,EAAiB5Z,EAAI2Z,EAArC5Z,CAAuDlB,MAGhE,SAAS8a,EAAiB9a,GAKxB,OAHAqD,EAAKsJ,eAAeY,YAAa,EAEjClK,EAAK8J,eAAY9F,EACVtG,EACLG,EACAA,EAAQiD,QAAQ/B,EAAMjB,EAAIC,GAC1B,aACAiC,EAAKK,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,EANCtG,CAOLf,MAzJJiE,KA8KF,SAAyB/C,GACvBA,EAAQ+C,KAAKX,KAAKqJ,eAAepM,QA7K/Bka,EAAoC,CACtCxZ,SA+KF,SAA0CC,EAASC,EAAIC,GACrD,IAAIiC,EAAOC,KACX,OAAOvC,EACLG,GAQF,SAAqBlB,GACnB,OAAOyF,EAAczF,KAClBwO,EAAWnL,EAAK/C,OAAQ,4BACvBc,EAAIpB,GACJmB,EAAGnB,KAVP,2BACAqD,EAAKK,OAAOpC,WAAW8M,QAAQlJ,KAAKtD,QAAQ,iBAAmB,OAC3DyF,EACA,IAtLNhG,SAAS,GAEP0Z,EAAkB,CACpB9Z,SAsJF,SAAwBC,EAASC,EAAIC,GACnC,IAAIiC,EAAOC,KACX,OAAOvC,EACLG,GAMF,SAAqBlB,GACnB,OAAOwO,EAAWnL,EAAK/C,OAAQ,oBAC7B+C,EAAKsJ,eAAe9G,KAClB1E,EAAGnB,GACHoB,EAAIpB,KARR,iBACAqD,EAAKsJ,eAAe9G,KAAO,IA3J7BxE,SAAS,GA6LXxB,EAAOC,QAAUsC,G,iCCnNjB,IAAItB,EAAqB,EAAQ,IAC7B8B,EAAU,EAAQ,KAClB7B,EAAe,EAAQ,IAEvBwR,EAAkB,CACpBrP,KAAM,kBACNjC,SAwDF,SAAiCC,EAASC,EAAIC,GAC5C,IAEIyJ,EACAmQ,EAHA3X,EAAOC,KACP5B,EAAQ2B,EAAK/C,OAAOG,OAIxB,KAAOiB,KAGL,GACiC,eAA/B2B,EAAK/C,OAAOoB,GAAO,GAAGnB,MACS,eAA/B8C,EAAK/C,OAAOoB,GAAO,GAAGnB,MACS,YAA/B8C,EAAK/C,OAAOoB,GAAO,GAAGnB,KACtB,CACAya,EAA2C,cAA/B3X,EAAK/C,OAAOoB,GAAO,GAAGnB,KAClC,MAIJ,OAEA,SAAeP,GACb,IAAKqD,EAAKmK,OAASnK,EAAK8J,WAAa6N,GAInC,OAHA9Z,EAAQ6C,MAAM,qBACd7C,EAAQ6C,MAAM,6BACd8G,EAAS7K,EACFwU,EAAgBxU,GAGzB,OAAOoB,EAAIpB,IAGb,SAASwU,EAAgBxU,GACvB,OAAIA,IAAS6K,GACX3J,EAAQ8C,QAAQhE,GACTwU,IAGTtT,EAAQ+C,KAAK,6BACNlD,EAAaG,EAAS2U,EAAoB,aAA1C9U,CAAwDf,IAGjE,SAAS6V,EAAmB7V,GAC1B,OAAa,OAATA,GAAiBc,EAAmBd,IACtCkB,EAAQ+C,KAAK,qBACN9C,EAAGnB,IAGLoB,EAAIpB,KAvGbuE,UAGF,SAAkCjE,EAAQiB,GACxC,IACI+J,EACA5G,EACAqN,EACAkJ,EAJAvZ,EAAQpB,EAAOG,OAOnB,KAAOiB,KACL,GAAyB,UAArBpB,EAAOoB,GAAO,GAAgB,CAChC,GAA8B,YAA1BpB,EAAOoB,GAAO,GAAGnB,KAAoB,CACvC+K,EAAU5J,EACV,MAG4B,cAA1BpB,EAAOoB,GAAO,GAAGnB,OACnBmE,EAAOhD,OAIqB,YAA1BpB,EAAOoB,GAAO,GAAGnB,MAEnBD,EAAO8E,OAAO1D,EAAO,GAGlBqQ,GAAwC,eAA1BzR,EAAOoB,GAAO,GAAGnB,OAClCwR,EAAarQ,GAKnBuZ,EAAU,CACR1a,KAAM,gBACNqD,MAAOhB,EAAQtC,EAAOoE,GAAM,GAAGd,OAC/BC,IAAKjB,EAAQtC,EAAOA,EAAOG,OAAS,GAAG,GAAGoD,MAG5CvD,EAAOoE,GAAM,GAAGnE,KAAO,oBAGnBwR,GACFzR,EAAO8E,OAAOV,EAAM,EAAG,CAAC,QAASuW,EAAS1Z,IAC1CjB,EAAO8E,OAAO2M,EAAa,EAAG,EAAG,CAAC,OAAQzR,EAAOgL,GAAS,GAAI/J,IAC9DjB,EAAOgL,GAAS,GAAGzH,IAAMjB,EAAQtC,EAAOyR,GAAY,GAAGlO,MAEvDvD,EAAOgL,GAAS,GAAK2P,EAIvB,OADA3a,EAAOuB,KAAK,CAAC,OAAQoZ,EAAS1Z,IACvBjB,IAuDTT,EAAOC,QAAUyS,G,iCClHjB,IAAI2I,EAAS,cAoFbrb,EAAOC,QAlFP,WACE,IAGIqb,EAHAvX,GAAQ,EACRsF,EAAS,EACTgO,EAAS,GAEb,OAEA,SAAsBnV,EAAOqZ,EAAUvX,GACrC,IACIwX,EACArU,EACAR,EACA8U,EACAtb,EALAiG,EAAS,GAMblE,EAAQmV,EAASnV,EAAMwZ,SAASH,GAChC5U,EAAgB,EAChB0Q,EAAS,GAELtT,IAC0B,QAAxB7B,EAAMkH,WAAW,IACnBzC,IAGF5C,OAAQyD,GAGV,KAAOb,EAAgBzE,EAAMtB,QAAQ,CAMnC,GALAya,EAAOM,UAAYhV,EACnB6U,EAAQH,EAAOO,KAAK1Z,GACpBuZ,EAAcD,EAAQA,EAAM3Z,MAAQK,EAAMtB,OAC1CT,EAAO+B,EAAMkH,WAAWqS,IAEnBD,EAAO,CACVnE,EAASnV,EAAMiD,MAAMwB,GACrB,MAGF,GAAa,KAATxG,GAAewG,IAAkB8U,GAAeH,EAClDlV,EAAOpE,MAAM,GACbsZ,OAAmB9T,OAYnB,GAVI8T,IACFlV,EAAOpE,MAAM,GACbsZ,OAAmB9T,GAGjBb,EAAgB8U,IAClBrV,EAAOpE,KAAKE,EAAMiD,MAAMwB,EAAe8U,IACvCpS,GAAUoS,EAAc9U,GAGb,IAATxG,EACFiG,EAAOpE,KAAK,OACZqH,SACK,GAAa,IAATlJ,EAIT,IAHAgH,EAA+B,EAAxB0U,KAAKC,KAAKzS,EAAS,GAC1BjD,EAAOpE,MAAM,GAENqH,IAAWlC,GAAMf,EAAOpE,MAAM,QACnB,KAAT7B,GACTiG,EAAOpE,MAAM,GACbqH,EAAS,IAGTiS,GAAmB,EACnBjS,EAAS,GAIb1C,EAAgB8U,EAAc,EAG5BzX,IACEsX,GAAkBlV,EAAOpE,MAAM,GAC/BqV,GAAQjR,EAAOpE,KAAKqV,GACxBjR,EAAOpE,KAAK,OAGd,OAAOoE,K,iCChFX,IAAIwI,EAAc,EAAQ,KAU1B5O,EAAOC,QARP,SAAqBQ,GACnB,MAAQmO,EAAYnO,KAIpB,OAAOA,I,gCCHTT,EAAOC,QAJP,SAAuBE,GACrB,OAAiB,IAAVA,IAAyB,IAAVA,GAAwB,KAATA,I,gCCDvC,IAAIoF,EAAS,EAAQ,KAmCrBvF,EAAOC,QA/BP,SAAuBsC,EAAMwB,EAAOgY,EAAQvZ,GAC1C,IAEIyF,EAFAjE,EAAMzB,EAAK3B,OACXob,EAAa,EAWjB,GAPEjY,EADEA,EAAQ,GACDA,EAAQC,EAAM,EAAIA,EAAMD,EAEzBA,EAAQC,EAAMA,EAAMD,EAG9BgY,EAASA,EAAS,EAAIA,EAAS,EAE3BvZ,EAAM5B,OAAS,KACjBqH,EAAa8I,MAAM7E,KAAK1J,IACboF,QAAQ7D,EAAOgY,GAC1BxW,EAAO0W,MAAM1Z,EAAM0F,QAKnB,IAFI8T,GAAQxW,EAAO0W,MAAM1Z,EAAM,CAACwB,EAAOgY,IAEhCC,EAAaxZ,EAAM5B,SACxBqH,EAAazF,EAAM2C,MAAM6W,EAAYA,EAAa,MACvCpU,QAAQ7D,EAAO,GAC1BwB,EAAO0W,MAAM1Z,EAAM0F,GACnB+T,GAAc,IACdjY,GAAS,M,gCC1Bf/D,EAAOC,QAJP,SAAmCE,GACjC,OAAOA,EAAO,GAAc,KAATA","file":"static/module-micromark.78975905.js","sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n"],"sourceRoot":""}